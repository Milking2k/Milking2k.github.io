<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jelech的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jelech.cn/"/>
  <updated>2018-12-02T01:39:36.170Z</updated>
  <id>http://www.jelech.cn/</id>
  
  <author>
    <name>Jelech</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql学习笔记</title>
    <link href="http://www.jelech.cn/posts/51482/"/>
    <id>http://www.jelech.cn/posts/51482/</id>
    <published>2018-11-30T02:09:33.000Z</published>
    <updated>2018-12-02T01:39:36.170Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h1 id="mysql设计"><a href="#mysql设计" class="headerlink" title="mysql设计"></a>mysql设计</h1><h2 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2><ul><li>键：一个识别每一个特定用户的字段。</li><li>外键：一个表引用了其他表中的主键，那么这个字段就是外键。</li><li>模式：数据库整套表格的完整设计蓝图。</li><li>关系：两个表格数据之间的关系，可以通过外键表达。</li></ul><h2 id="设计时需要注意"><a href="#设计时需要注意" class="headerlink" title="设计时需要注意"></a>设计时需要注意</h2><ul><li>每个对象应该有自己的表。</li><li>避免保存冗余的数据，比如相同的数据保存在了多个表当中（当然外键不算）。</li><li>考虑耦合性，减少空属性的出现。如果出现了，尝试拆成多个表。</li><li>使用原子列值，每一行的每个属性只储存一个数据。</li><li>键要选择的有意义。</li><li>考虑需要询问数据库时的问题，比如多值、多层查询时。</li><li>注意表格的大体分类：描述世界的简单表、描述关系的关联表。</li></ul><h1 id="mysql数据库的创建"><a href="#mysql数据库的创建" class="headerlink" title="mysql数据库的创建"></a>mysql数据库的创建</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#----临时笔记处----#</span><br><span class="line">#修改密码，注意mysql5.7中user表中密码改为了authentication_string</span><br><span class="line">    update mysql.user set authentication_string1=password(&apos;123456&apos;) where User=&quot;jelech&quot; and Host=&quot;localhost&quot;;</span><br><span class="line"></span><br><span class="line">    # 密码进入数据库，创建新数据库，授权新用户，刷新改动，设置根密码(初始使用一次就行)</span><br><span class="line">    mysql -u root -p</span><br><span class="line">  create database blog_db charset=utf8;</span><br><span class="line">    grant all on db_music.* to jelech@localhost identified by &quot;123456&quot;;</span><br><span class="line">    flush privileges;</span><br><span class="line">    set password for root@localhost=password(&quot;abccba&quot;);</span><br><span class="line"></span><br><span class="line">    # 修改表格格式信息</span><br><span class="line">    ALTER TABLE userInfo MODIFY password VARCHAR(100) NOT NULL;</span><br><span class="line"></span><br><span class="line">    # 删除表中所有内容，以及索引 用这种方法相当于重载了表格内容，全新的！</span><br><span class="line">    truncate table wp_comments;</span><br></pre></td></tr></table></figure><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p><code>msyql -h hostname -u username -p</code></p><p>eg.<code>msyql -u root -p</code></p><ul><li>-h 指定希望连接的主机，默认为localhost</li><li>-u 指定用户名称，默认为登录操作系统的用户名</li><li>-p 使用一个密码来连接他</li></ul><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p><code>create database dbname;</code></p><p>eg.<code>create database db_music;</code></p><h2 id="mysql权限问题"><a href="#mysql权限问题" class="headerlink" title="mysql权限问题"></a>mysql权限问题</h2><ul><li>最少权限原则，一个用户不应该拥有超过他的功能的多余权限。</li><li><code>grant</code> <code>revoke</code> 授予和收回权限</li></ul><h2 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grant privileges # 用逗号分开的权限：all, select, create...</span><br><span class="line">on item_name # 可控制的部分:*.*, item_name.*, item_name.th_table</span><br><span class="line">to user_name # 授予一个用户：可附加通过密码 identified by &apos;password&apos;</span><br><span class="line">[require ssl_options] # 决定用户连接时，是否应该通过加密套接字连接</span><br><span class="line">[with grant potion] # 决定用户是否可以授权给别自己拥有的权限。</span><br></pre></td></tr></table></figure><h3 id="with语句也可以"><a href="#with语句也可以" class="headerlink" title="with语句也可以"></a>with语句也可以</h3><p>决定这个用户每小时可以访问的数量</p><p><code>MAX_QUERIES_PER_HOUR n</code> <code>MAX_UPDATES_PER_HOUR n</code> <code>MAX_CONNECTIONS_PER_HOUR n</code></p><p>这个在共享系统上限制单个用户的负载非常有用。</p><blockquote><p>mysql中分为3个基本权限：适用一般用户权限、适用赋予管理员权限、几个特定权限。<br>mysql中存放了所有用户名、密码的地方，这里的访问权限不应随意授予。</p></blockquote><h3 id="用户的权限"><a href="#用户的权限" class="headerlink" title="用户的权限"></a>用户的权限</h3><ul><li>select：从表中选择行</li><li>insert：插入新行</li><li>udpate：修改表行中值</li><li>delete：删除表中的行</li><li>index：创建和拖动特定表的索引</li><li>alter：修改表的结构，比如添加列、重名列|表、修改列的数据类型…</li><li>create：新建数据库|表，如果grant授予的特定的数据库，则他们只能创建该数据库|表，也就是他们需要先删除</li><li>drop：删除数据库和表</li></ul><h3 id="管理员的权限"><a href="#管理员的权限" class="headerlink" title="管理员的权限"></a>管理员的权限</h3><ul><li>create temporary tables：允许使用temporary关键字</li><li>file：允许将数据从文件中读入表、输出到文件</li><li>lock table：允许使用lock table语句</li><li>process：允许管理员查看属于所有用户的服务器进程</li><li>reload：允许管理员重新载入授权表、清空授权、主机、日志和表</li><li>replication client：允许复制主机、使用show status</li><li>replication slave：允许复制从服务器连接到主服务器</li><li>show databases：允许查看所有数据库列表，没有这个权限，用户就只能看到他们自己的</li><li>shutdown：允许关闭mysql服务器</li><li>super：允许关闭属于任何用户的线程</li></ul><h3 id="特别权限"><a href="#特别权限" class="headerlink" title="特别权限"></a>特别权限</h3><ul><li>all：授予以上所有权限</li><li>usage：不授予权限，只允许用户登录，但不能进行任何操作。这样做的目的是为了以后授予权限</li></ul><h2 id="收回权限"><a href="#收回权限" class="headerlink" title="收回权限"></a>收回权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">revoke privileges # 收回某种权限</span><br><span class="line">on item # 从某个数据库或者表中</span><br><span class="line">from username #从一个用户中</span><br></pre></td></tr></table></figure><p>其余部分和授权相似。</p><h2 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h2><p><code>use db_name</code></p><p>在登录后应切换到需要使用的数据库</p><h2 id="使用数据库表"><a href="#使用数据库表" class="headerlink" title="使用数据库表"></a>使用数据库表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table table_name(</span><br><span class="line"># 字段属性</span><br><span class="line">  table_id int auto_increment not null primary key,</span><br><span class="line">  table_name varchar(255) not null,</span><br><span class="line">  table_float float(6,2),</span><br><span class="line">  #...unsigned意思是他只能是0或者一个正数</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>text：该类型用于表示更长的数据，比如文章</li><li>zerofill：该属性可以让数字类型添加前导0。</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ol><li><p>整数数据类型</p><ul><li>tinyint(1)：非常小的整数</li><li>bit、bool：同tinyint</li><li>smallint(2)：小整形数</li><li>mediumint(3)：中整形数</li><li>int(4)：一般整数</li><li>integer：同int</li><li>bigint(8)：大整形数</li></ul></li><li><p>浮点数据类型</p><ul><li>float(精度)：可用于指定单精度和双精度的浮点数</li><li>float[(M,D)]：指定显示宽度和小数位数===float(4)</li><li>double[(M,D)]：指定了显示宽度和小数位数===float(8)</li><li>duoble：同上</li><li>precision[(M,D)]</li><li>real[(M,D)]：同上</li><li>decimal[(M [,D])]：以char储存的浮点数</li><li>numeric\dec\fixed：同上</li></ul></li><li>日期和时间类型<em>值得注意的是如果不手动设置，特定行中的timestamp将被修改为最近修改改行的日期和时间，这对事物记录很有帮助</em><ul><li>date：一个日期，以YYYY-MM-DD格式</li><li>time：一个时间，以HH:MM:SS格式</li><li>datetime：日期和时间，以YYYY-MM-DD HH:MM:SS格式</li><li>timestamp[(M)]：时间标签，在处理报告中有意义</li><li>year[(2/4)]：可指定显示格式地显示年份</li></ul></li><li>字符串类型<ul><li>char：小段文本，varchar为可变长度的类型，指定的是每种类型的宽度</li><li>text、blob：大小可变，分别适用于长文本、二进制数据(<em>二进制是万金油</em>)。text区分大小写，blob不区分大小写</li><li>set、enum：set最大可以有64个元素，列值必须来自其中。enum枚举最大65535个元素，同时只能有一个为null或者为枚举中的值</li></ul></li></ol><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><p><code>show tables</code>：显示当前用户的数据库下的所有表。</p><p><code>show databases</code>：显示当前用户的所有数据库。</p><p><code>descibe table_name</code>：也作<em>desc</em>，显示表格的结构。</p><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><blockquote><p>索引有利于提高数据库的查询速度</p></blockquote><p><code>create index index_name on table_name (index_col_name ...)</code></p><h1 id="使用mysql数据库"><a href="#使用mysql数据库" class="headerlink" title="使用mysql数据库"></a>使用mysql数据库</h1><p>ss</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.jelech.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://www.jelech.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="mysql" scheme="http://www.jelech.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>ACM总结</title>
    <link href="http://www.jelech.cn/posts/65518/"/>
    <id>http://www.jelech.cn/posts/65518/</id>
    <published>2018-11-29T12:31:17.000Z</published>
    <updated>2018-12-02T02:43:05.786Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)" />    <label for="pass">欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      欢迎参观我的博客，O(∩_∩)O但是这篇文章是私有的哦&lt;/br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.jelech.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
      <category term="总结" scheme="http://www.jelech.cn/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>设计模式学习笔记</title>
    <link href="http://www.jelech.cn/posts/3493/"/>
    <id>http://www.jelech.cn/posts/3493/</id>
    <published>2018-11-28T12:01:28.000Z</published>
    <updated>2018-12-01T13:39:28.834Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="设计模式笔记"><a href="#设计模式笔记" class="headerlink" title="设计模式笔记"></a>设计模式笔记</h2><blockquote><p>重构获得模式<br>寻找变化点，在变化点运用设计模式</p><p>静态-&gt;动态<br>早绑定-&gt;晚绑定<br>继承-&gt;组合<br>编译时依赖-&gt;运行时依赖<br>紧耦合-&gt;松耦合</p><p>对扩展开放，对修改关闭：类的新增加功能应使用扩展功能，而不是通过修改原来的代码。比如一堆的elseif</p><p><em>attention</em><br><em>规划时,划分出稳定的和变化的</em></p></blockquote><h2 id="组件协作-使用框架与应用创建与划分时"><a href="#组件协作-使用框架与应用创建与划分时" class="headerlink" title="组件协作: 使用框架与应用创建与划分时"></a>组件协作: 使用框架与应用创建与划分时</h2><h3 id="template-Method"><a href="#template-Method" class="headerlink" title="template Method"></a>template Method</h3><p><code>从早绑定到晚绑定</code><br>算法的骨架需要稳定才能使用这个方法<br>使得子类可以不改变一个算法的结构，就可以重定义这个算法的某些步骤<br>框架写好了部分函数和主调用函数，使用者只需要重定义一些子类信息就可以</p><h3 id="Strategy"><a href="#Strategy" class="headerlink" title="Strategy"></a>Strategy</h3><p><code>多态调用，对扩展开放，对修改关闭</code><br>多个else if..并且限制不明显，未来很有可能扩展时，可以使用，代码过长会占用更多内存，而对象只会在调用时使用<br>定义一系列算法，把他们都一个个封装起来，并且可以互相替换(变化)，使他们所服务的客户程序稳定<br>使得在运行时支持在各种算法之间切换</p><h3 id="Obeserve-Event"><a href="#Obeserve-Event" class="headerlink" title="Obeserve / Event"></a>Obeserve / Event</h3><p>父类通过调用多个观察者，观察子类的信息，更新一些其他的数据</p><h2 id="单一职责-因为需求的增加，会让子类功能复用多次重复利用，应划清责任"><a href="#单一职责-因为需求的增加，会让子类功能复用多次重复利用，应划清责任" class="headerlink" title="单一职责: 因为需求的增加，会让子类功能复用多次重复利用，应划清责任"></a>单一职责: 因为需求的增加，会让子类功能复用多次重复利用，应划清责任</h2><h3 id="Decorator装饰"><a href="#Decorator装饰" class="headerlink" title="Decorator装饰"></a>Decorator装饰</h3><p><code>继承父类的功能后，&#39;多个&#39;子类在细化细节时候对功能进行扩展，引入的静态特质，缺乏灵活性:比如都要加密，都要缓存...</code><br>动态的给一个对象增加一些额外的职责，Decorator模式比生成子类更为灵活<br>基类分为了子类与装饰类(Decorator类)</p><h3 id="Bridge"><a href="#Bridge" class="headerlink" title="Bridge"></a>Bridge</h3><p><em>以下是预期内容</em></p><p>对象创建<br>对象性能<br>借口隔离<br>状态变化<br>数据结构<br>行为变化<br>领域问题</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.jelech.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://www.jelech.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>安装Django</title>
    <link href="http://www.jelech.cn/posts/3676/"/>
    <id>http://www.jelech.cn/posts/3676/</id>
    <published>2018-10-10T12:24:40.000Z</published>
    <updated>2018-12-02T01:16:33.315Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="How-2-Install-Django"><a href="#How-2-Install-Django" class="headerlink" title="How 2 Install Django?"></a>How 2 Install Django?</h2><p>当然第一步是安装好你的python啦！</p><h2 id="安装django"><a href="#安装django" class="headerlink" title="安装django"></a>安装django</h2><p><code>pip install django(指定版本django==2.1.1)</code></p><h3 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h3><p><code>django.setting.py -&gt; DATABASE</code></p><p>​    //设置为mysql，数据库名，用户名，密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'ENGINE'</span>     :   <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">​<span class="string">'NAME'</span>       :   <span class="string">'blog-db'</span>,</span><br><span class="line">​<span class="string">'USER'</span>       :   <span class="string">'jelech'</span>,</span><br><span class="line">​<span class="string">'PASSWORD'</span>   :   <span class="string">'123456'</span>,</span><br></pre></td></tr></table></figure><h2 id="安装memcached-django-web缓存"><a href="#安装memcached-django-web缓存" class="headerlink" title="安装memcached django-web缓存"></a>安装memcached django-web缓存</h2><p><em>当同一个用户(ip)访问时候，缓存会识别出来，直接拿出上次同样的访问进行返回</em></p><ol><li>：<code>cd ..</code>（返回到Downloads目录下，Downloads目录下专门放所有下载的东西）</li><li>：<code>wget http://www.memcached.org/files/memcached-1.4.24.tar.gz</code>（下载地址）</li><li>：<code>tar zxvf memcached-1.4.24.tar.gz</code>（进行解压）</li><li>：<code>cd memcached-1.4.24</code> （进入到memcached-1.4.24目录下）</li><li>：<code>./configure --with-libevent=/usr</code>（进行配置）</li><li>：<code>Make</code>（编译这些源代码，让它生成库文件</li><li>：<code>make install</code></li></ol><h3 id="安装连接器"><a href="#安装连接器" class="headerlink" title="安装连接器"></a>安装连接器</h3><p>第一步：pip install python-memcached</p><p>第二步：启动相应服务（因为python-memcached安装完成后只是个可执行文件，我们需要启动它）<code>/usr/local/bin/memcached -u root -d  -p 11211 -c 256 -P /tmp/memcached.pid</code></p><p>第三步：启动以后，我们要看这个东西有没有在系统中启动<code>ps -ef|grep memca</code>每次启动都需要手动输入，很麻烦。</p><p>修改启动文件<code>vi /etc/rc.local</code>将<code>/usr/local/bin/memcached -u root -d  -p 11211 -c 256 -P /tmp/memcached.pid</code>命令放在里面</p><h3 id="Django-setting-配置缓存"><a href="#Django-setting-配置缓存" class="headerlink" title="Django.setting 配置缓存"></a>Django.setting 配置缓存</h3><p>DATABASE下新加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CACHES = &#123;</span><br><span class="line">  <span class="string">'default'</span>: &#123;</span><br><span class="line">    <span class="string">'BACKEND'</span>: <span class="string">'django.core.cache.backends.memcached.MemcachedCache'</span>,</span><br><span class="line">    <span class="string">'LOCATION'</span>:<span class="string">'127.0.0.1:11211'</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#多个缓存服务器，在location写地址数组[,,,]</span></span><br><span class="line">MIDDLEWAREE_CLASSES内(如果没有，就加到MIDDLEWARE)</span><br><span class="line"><span class="comment">#最前新加</span></span><br><span class="line"><span class="string">'django.middleware.cache.UpdateCacheMiddleware'</span>,</span><br><span class="line"><span class="comment">#最后新加</span></span><br><span class="line"><span class="string">'django.middleware.cache.FetchFromCacheMiddleware'</span>,</span><br></pre></td></tr></table></figure><p><code>django manage.py migrate</code> 会自动创建django的app链接数据库，创建相应的表 表会依据models进行创建</p><h3 id="django配置神器django-debug-toolbar"><a href="#django配置神器django-debug-toolbar" class="headerlink" title="django配置神器django-debug-toolbar:"></a>django配置神器django-debug-toolbar:</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pip 安装好插件</span></span><br><span class="line">pip install django-debug-toolbar</span><br><span class="line"><span class="comment">#setting中的app加入debug_toolbar</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑toolbar内部文件</span></span><br><span class="line">python -c <span class="string">"import django;print(django.__path__);"</span> <span class="comment">#得到pip路径</span></span><br><span class="line">vi ..path/site-pacages/debug_toolbar/settings.py</span><br><span class="line"><span class="comment">#加入(修改)</span></span><br><span class="line"><span class="string">'JQUERY_URL'</span>:<span class="string">'//cdn.bootcss.com/jquery/2.1.4/jquery.min.js'</span></span><br></pre></td></tr></table></figure><h2 id="开始Django"><a href="#开始Django" class="headerlink" title="开始Django"></a>开始Django</h2><ul><li><h4 id="创建APP"><a href="#创建APP" class="headerlink" title="创建APP,"></a>创建APP,</h4></li><li><h4 id="修改setting"><a href="#修改setting" class="headerlink" title="修改setting,"></a>修改setting,</h4></li><li><h4 id="修改url"><a href="#修改url" class="headerlink" title="修改url,"></a>修改url,</h4></li><li><h4 id="修改app-views"><a href="#修改app-views" class="headerlink" title="修改app.views"></a>修改app.views</h4></li></ul><h3 id="django中配置日志器的建立和使用"><a href="#django中配置日志器的建立和使用" class="headerlink" title="django中配置日志器的建立和使用"></a>django中配置日志器的建立和使用</h3><h4 id="修改setting-加入"><a href="#修改setting-加入" class="headerlink" title="修改setting,加入"></a>修改setting,加入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">'version'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'disable_existing_loggers'</span>: false,</span><br><span class="line">    <span class="string">'formaters'</span>: &#123;</span><br><span class="line">        <span class="string">'standerd'</span>: &#123;</span><br><span class="line">            <span class="string">'format'</span>:<span class="string">'%(ssctime)s [%(thresdName)s:%(thread)d][%(name)s:%(lineno)d][%(module)s:%(funcName)s][%(levelname)s] - %(message)s'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'filters'</span>: &#123;</span><br><span class="line">            <span class="string">'mail_admins'</span>: &#123;</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'ERROR'</span>,</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'django.utils.log.AdminEmailHandler'</span>,</span><br><span class="line">                <span class="string">'include_html'</span>:<span class="keyword">True</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'default'</span>: &#123;</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'logging.handlers.RotatingFiileHandler'</span>,</span><br><span class="line">                <span class="string">'filename'</span>: <span class="string">'log/all.log'</span>,</span><br><span class="line">                <span class="string">'maxBytes'</span>: <span class="number">1024</span>* <span class="number">1024</span>* <span class="number">5</span>,</span><br><span class="line">                <span class="string">'backupCount'</span>: <span class="number">5</span>,</span><br><span class="line">                <span class="string">'formatter'</span>:<span class="string">'standerd'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'error'</span>: &#123;</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'ERROR'</span>,</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'logging.handlers.RotatingFiileHandler'</span>,</span><br><span class="line">                <span class="string">'filename'</span>: <span class="string">'log/error.log'</span>,</span><br><span class="line">                <span class="string">'maxBytes'</span>: <span class="number">1024</span>* <span class="number">1024</span>* <span class="number">5</span>,</span><br><span class="line">                <span class="string">'backupCount'</span>: <span class="number">5</span>,</span><br><span class="line">                <span class="string">'formatter'</span>:<span class="string">'standerd'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'console'</span>: &#123;</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'logging.StreamHandler'</span>,</span><br><span class="line">                <span class="string">'formatter'</span>: <span class="string">'standerd'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'request_handler'</span>;&#123;</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'logging.handlers.RotatingFiileHandler'</span>,</span><br><span class="line">                <span class="string">'filename'</span>: <span class="string">'log/script.log'</span>,</span><br><span class="line">                <span class="string">'maxBytes'</span>: <span class="number">1024</span>* <span class="number">1024</span>* <span class="number">5</span>,</span><br><span class="line">                <span class="string">'backupCount'</span>: <span class="number">5</span>,</span><br><span class="line">                <span class="string">'formatter'</span>:<span class="string">'standerd'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'scripts_handler'</span>;&#123;</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'logging.handlers.RotatingFiileHandler'</span>,</span><br><span class="line">                <span class="string">'filename'</span>: <span class="string">'log/script.log'</span>,</span><br><span class="line">                <span class="string">'maxBytes'</span>: <span class="number">1024</span>* <span class="number">1024</span>* <span class="number">5</span>,</span><br><span class="line">                <span class="string">'backupCount'</span>: <span class="number">5</span>,</span><br><span class="line">                <span class="string">'formatter'</span>:<span class="string">'standerd'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'loggers'</span>: &#123;</span><br><span class="line">            <span class="string">'django'</span>: &#123;</span><br><span class="line">                <span class="string">'handlers'</span>: [<span class="string">'default'</span>, <span class="string">'console'</span>],</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">                <span class="string">'propaga'</span>:<span class="keyword">False</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'django.request'</span>: &#123;</span><br><span class="line">                <span class="string">'handlers'</span>: [<span class="string">'request_handler'</span>],</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">                <span class="string">'propaga'</span>:<span class="keyword">False</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'scripts'</span>: &#123;</span><br><span class="line">                <span class="string">'handlers'</span>: [<span class="string">'scripts_handler'</span>],</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">                <span class="string">'propaga'</span>:<span class="keyword">False</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="string">'blog.views'</span>: &#123; <span class="comment">#app name.views</span></span><br><span class="line">                <span class="string">'handlers'</span>: [<span class="string">'default'</span>, <span class="string">'error'</span>],</span><br><span class="line">                <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">                <span class="string">'propaga'</span>:<span class="keyword">False</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger = logging.getLogger(<span class="string">'appName.views'</span>)</span><br><span class="line">logger.error(x) errorException</span><br><span class="line"><span class="comment">#抓取x错误登记到error.txt文件里</span></span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#setting中可以设置网站的基本信息，网站内进行引用</span></span><br><span class="line">SITE_NAME = <span class="string">'jelech的个人博客'</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">#1`局部引用</span></span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="comment">#2`全局setting</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">global_setting</span><span class="params">(request)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="string">'SITE_NAME'</span>:setting.SITE_NAME,</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">#settings中TMPLATES中context_processors尾部加入</span></span><br><span class="line"><span class="string">'appName.views.global_setting'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">#网站内直接使用变量</span></span><br><span class="line">&#123;&#123; SITE_NAME &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#mysql临时笔记</span><br><span class="line"></span><br><span class="line">    //修改密码，注意mysql5.7中user表中密码改为了authentication_string</span><br><span class="line">    update mysql.user set authentication_string1=password(&apos;123456&apos;) where User=&quot;jelech&quot; and Host=&quot;localhost&quot;;</span><br><span class="line"></span><br><span class="line">    // 密码进入数据库，创建新数据库，授权新用户，刷新改动，设置根密码(初始使用一次就行)</span><br><span class="line">    mysql -u root -p</span><br><span class="line">    create database blog_db charset=utf8;</span><br><span class="line">    grant all on db_music.* to jelech@localhost identified by &quot;123456&quot;;</span><br><span class="line">    flush privileges;</span><br><span class="line">    set password for root@localhost=password(&quot;Nozuonodie&quot;);</span><br><span class="line"></span><br><span class="line">    //修改表格格式信息</span><br><span class="line">    ALTER TABLE userInfo MODIFY password VARCHAR(100) NOT NULL;</span><br><span class="line"></span><br><span class="line">    //删除表中所有内容，以及索引 用这种方法相当于重载了表格内容，全新的！</span><br><span class="line">    truncate table wp_comments;</span><br><span class="line"></span><br><span class="line">安装mysqlclient</span><br><span class="line"></span><br><span class="line">    pip install mysqlclient</span><br><span class="line"></span><br><span class="line">    安装Python mysqlclient出现“OSError: mysql_config not found”错误：</span><br><span class="line">    安装libmysqlclient-dev包即可，如果还有问题，可以安装python-dev</span><br><span class="line">    $ apt-get install libmysqlclient-dev python3-dev</span><br><span class="line"></span><br><span class="line">django链接数据库</span><br><span class="line">    pip install pymysql     #安装好python和mysql的连接器</span><br><span class="line">    python3 manage.py inspectdb &gt; bigDataSwap/models.py     #链接django和mysql，自动生成表中的各种东西</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="软件配置" scheme="http://www.jelech.cn/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="linux" scheme="http://www.jelech.cn/tags/linux/"/>
    
      <category term="软件配置" scheme="http://www.jelech.cn/tags/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Django" scheme="http://www.jelech.cn/tags/Django/"/>
    
      <category term="python" scheme="http://www.jelech.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>算法学习笔记</title>
    <link href="http://www.jelech.cn/posts/16186/"/>
    <id>http://www.jelech.cn/posts/16186/</id>
    <published>2018-09-20T13:09:57.000Z</published>
    <updated>2018-12-01T13:37:14.241Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="学习笔记O-∩-∩-O"><a href="#学习笔记O-∩-∩-O" class="headerlink" title="学习笔记O(∩_∩)O"></a>学习笔记O(∩_∩)O</h2><h4 id="倍增"><a href="#倍增" class="headerlink" title="倍增"></a>倍增</h4><blockquote><p>倍增是一种思想。依据这种思想，衍生出了ST表、LCA(最近公共祖先)以及一些在树上的倍增应用。</p></blockquote><p>考虑这样一个问题：如何快速在一个序列s中查询到不大于a的值？（这里序列已排序好<br>正常思想就是二分，每次取得s中<code>l,r,mid</code>的值，进行比较后快速logn速度逼近正确的值。但是这里我们不考虑二分<br>倍增和二分的思想很类似。对于一个单调的序列，我们可以快速的跳过太小的（或者太大的）数，从而快速逼近结果。<br>简单的模拟一下倍增：<br>· 设置一个长度p，每次如果查询到的值小于<strong>目标</strong>，位置<code>k+=p</code>，长度<code>p=2*p</code><br>· 如果查询到的值大于<strong>目标</strong>，长度<code>p=p/2</code>。并重复上一个步骤。<br>· 循环查询到确切的目标。<br>比如，起初位置在k为0，p为2.查询到s[k+p]为小于<strong>目标</strong>的数，<code>k</code>就变成了<code>k+p</code>，<code>p</code>增倍了。下一次查询到s[k+p]大于了<strong>目标</strong>数，我们就把p先减小为一半。再查一次。如果有概念了，可以想象出平均下来是logn的。</p><h4 id="ST表"><a href="#ST表" class="headerlink" title="ST表"></a>ST表</h4><blockquote><p>st表灵活的使用了倍增的思想<br>可以进行对区间最值问题的快速查找与更新<br>预处理O（n·logn），查询O（1），空间（n·logn）</p></blockquote><p>线段树虽说是区间维护的全能王，但是也恰巧这样导致了他在一些特别的方面处理比较慢，线段树的查询是O(logn)的，而且占用的空间也较大，所以容易被卡常数。</p><h4 id="字典树-Trie"><a href="#字典树-Trie" class="headerlink" title="字典树 Trie"></a>字典树 Trie</h4><blockquote><p>将所有字符串依据前缀构建的一棵树<br>其中的节点表示字符串的某个字符，树的根是一个空指针<br>是一种存放字符串的数据结构（就是为了其他算法的使用专门设计的</p></blockquote><h4 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h4><p>（好像顺序乱套了</p><blockquote><p>不是可以自动Acepte的程序<br>是基于kmp思想，建立在字典树上的自动匹配字符串算法<br>多个模板串，一个目标串<br><code>重要词典:</code><br>失败指针(fail指针)：指的是在匹配某个字符串的时候，如果到当前的位置发现不匹配，会跳到某个其他前缀匹配的位置，继续匹配。如果仍然没有，就会跳回到根</p></blockquote><h4 id="佩尔方程"><a href="#佩尔方程" class="headerlink" title="佩尔方程"></a>佩尔方程</h4><p>（没想到还是要学数论</p><blockquote><p>满足：x^2 - d<em>y^2 = 1 的方程<br>方程通过假设x1,x2两个解，解出了另一个新的解。这代表了如果知道方程中的最小特解，就能推论出所有的解。<br>通解：`Xn = Xn-1 </em> X1 + d <em> Yn-1 </em> Y1<code></code>Yn = Xn-1 <em> X1 + Yn-1 </em> Y1`<br>半难以发现正解公式，需要通过自己一步一步推公式。</p></blockquote><h4 id="赛后笔记"><a href="#赛后笔记" class="headerlink" title="赛后笔记"></a>赛后笔记</h4><blockquote><p>先贪心再暴力<br>打表找规律推公式<br>关于long long 要先仔细读题思考哪些部分需要再修改部分</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.jelech.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>linux下安装python3</title>
    <link href="http://www.jelech.cn/posts/21344/"/>
    <id>http://www.jelech.cn/posts/21344/</id>
    <published>2018-09-15T14:24:40.000Z</published>
    <updated>2018-12-01T13:36:22.891Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="一、首先，官网下载python3的所需版本。"><a href="#一、首先，官网下载python3的所需版本。" class="headerlink" title="一、首先，官网下载python3的所需版本。"></a>一、首先，官网下载python3的所需版本。</h2><p><a href="https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz" target="_blank" rel="noopener">wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz</a></p><p>想下载到那个文件夹下就先进入到那个文件夹下——cd /home/download</p><h3 id="二、然后，解压缩文件"><a href="#二、然后，解压缩文件" class="headerlink" title="二、然后，解压缩文件"></a>二、然后，解压缩文件</h3><p>tar -xvf Python-3.6.0.tgz</p><h3 id="三、创建安装文件的路径。"><a href="#三、创建安装文件的路径。" class="headerlink" title="三、创建安装文件的路径。"></a>三、创建安装文件的路径。</h3><p>mkdir /usr/local/python3</p><h3 id="四、编译。"><a href="#四、编译。" class="headerlink" title="四、编译。"></a>四、编译。</h3><p>./configure –prefix=/usr/local/python3</p><h3 id="五、安装。"><a href="#五、安装。" class="headerlink" title="五、安装。"></a>五、安装。</h3><p>1、make</p><p>2、make install</p><p>3、完毕</p><h3 id="六、创建新版本的软连接。"><a href="#六、创建新版本的软连接。" class="headerlink" title="六、创建新版本的软连接。"></a>六、创建新版本的软连接。</h3><p>1、修改旧版本</p><p>mv /usr/bin/python /usr/bin/python_bak</p><p>2、创建新的软连接</p><p>ln -s /usr/local/python3/bin/python3 /usr/bin/python</p><p>3、检查python的版本</p><p>python -V</p><p>python-3.6.0</p><p>软连接创建成功</p><h3 id="七、配置成功后，pip3用不了，需进一步配置。"><a href="#七、配置成功后，pip3用不了，需进一步配置。" class="headerlink" title="七、配置成功后，pip3用不了，需进一步配置。"></a>七、配置成功后，pip3用不了，需进一步配置。</h3><p>若已有pip3：</p><p>1、PATH=$PATH:$HOME/bin:</p><p>2、PATH=$PATH:$HOME/bin:/usr/local/python3/bin</p><p>3、完成</p><p>或者没有pip3：</p><p>sudo apt install python3-pip</p><p>这时pip3就可以使用了。</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.jelech.cn/tags/linux/"/>
    
      <category term="软件配置" scheme="http://www.jelech.cn/tags/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>日（口）记</title>
    <link href="http://www.jelech.cn/posts/34232/"/>
    <id>http://www.jelech.cn/posts/34232/</id>
    <published>2018-08-31T14:12:04.000Z</published>
    <updated>2018-12-01T13:41:33.271Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)" />    <label for="pass">欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19mTfn8r0Ph9VroUVgfGyZrPCpBRub5D+mtgGoLwR7XuNblMDHAeHWBT5I16T8Rmf6Gi2su/M9U2hYGEi21mrGVIlMsHy1LivgVqgsnM3Uy8NKZdtWkhIzXxj751imgJXTT3QVLleqLHcCJJbKBsTi9KpiaNicVGrxbh5vVwHKipCUeF1Y1VgjDZvJcjU23PBCBWn+mJoUxAdlU7vxGiORVOGV9ED7kW/YHF54Ja3o0gNL6oIIGrP6x8J0Ha8dWlhqQVKwzAOUeapeQGe+Yk8eq0wWbg5bY0+CYKx9lNro5eBUMEVZPVqR9YxnU8S65hYnj5YG5PDHICpJj5GK54OM8CWA4gFUpk1CsKXHnZsTMMpeRaxskDv/DQWkzRZNaJ3W+vvVkcvBP2X8XkJ5Ns69K6j0BY4ogr/9RMfd3KzuRieSjjA98/qSDygyXvpWxjD3vTpCuZrFsoMHRQKCA6zCX+4gDlOV12UeZkeF00CAHNLg8R5NVQiFPbwgZCqeP+YOxKYKYPAlgYtEq1SWeL/Iglt9MlT+SCJlkbyJdSwdbroCPir/qSzl+fgqccLYpSicc4n7phaTGLDs+d/o1RBUYZi/n/eUoKu4q6MVAmQsmsx83DwHC6t2HT2g/M9oYzoCpKriIAdvxTLaxqC4eoR1LzwB1qciiAkWwn/ExDpktDJEa0xICWpId4ywfxfeGj9TrRp/8letObgSppbMbJlkLzJBJ/hoPhLEQWEZXjyKWN3zMpzpPUUMyNms4j3YvlpJMR4VkPgyEi0RiXFLSLBm6Ap9qQcpyQnbcv8WY7Z+4StWCr4Pa+3sZZk5Qn3pjtIyJwXBL8cEOIGoWVX17pRcPr0byIVZwtYlFOC3/tLYO9/y8Dq4Vf+O2J9M/iLe5OBb7SQs8ESm+gwwE8Zl1TsOUzSLaJYForIrg571s7M5yN3AWi1umJF5UCL3VXSXJIwn9b7dCurM8Cd3+trrwqJ/QuBsc/M0hKuh8h2C6X/ygdaEV2cOZVcjpHNc7GH3Yz7cR4Gn6NuF9Tq1bIqr8GwVgrZMEUW7yTnF82xnYGp8ZRzLHntznLNY0suhTtQZ8zj+FrtiGaJZhI0R+Rt2/CjnQd9k5mB6VkBCG3yEgHJbN7HTcpcGUD1pzCspWFfTs6EEvizLYBrCP9/MWX93Pea5qvhCRTIozJaiRwRzn1O3/9xozuAai1g6flpaGjApfV+VGpYM508+gsSDxb22s7yxPtEGnSj0y0ZBX7s7mwci6pqqzniOk5GcbwyTz0EPBobhfsj4/w+EOMYZ4bOHOwkEv47A+SziZZ3oeJctrCPVENtTZKVPsWJosCVfR40NcQc6ectokG0YC8e+fL59HXslGqVyP74fn6zOy4DsJHqXXhZsIgDQExHuWgX+kF+pw1SNNs6MmRo2BdF4IGVnQeheiPRgvPZQL8euotNIrfEFJGY3sh6i5Yz8iPRnDo4sz8XAjb47s2ucEOMtdFnPgPyVdMVX0ztMaIcvZGbCR9j8YF+TSWxArDh1iNcgcjbf314TFdI4S0Yg/4hHixTjYdt+2ezhRnk3d3QpazGl1ZmeYpWpZffrC+oYd3uc6lHa285TModTgMn0wKeLpTPJNEOvkUnVVDGXjFE/yGEY0pcgKXZ62S2r218yMgBR9ZK6PoSOFRO04VEe+UmnUODvkNjFKjeVBw8Q6R1XBLd0iemm5uKgfpr+p5IFLDEEFpJOiKzAlA9VyP4V3oJxp+oRKPf7pAGwpyZ5QrGLKJ0/6UGt/ZlnIw3xrH7uGp56v+250lULwPYqEKMFK90RTsr/G3+JKvABoB9rodgybg3G40af3KR/Ei0MSwwfW/kPZFPTukrtb6tVkD6x0x27PfWfFC+tBKb2bDBTIbz8LwMwjEocRjzcqK96YKBo7Xs1UfgA7hcyC2Om1PyWHvw6uob0ID0KO1RjwluQmDlgu9VPMa9WXtzCGNb2/gLKPI0LByeXmJx4DDkK6hzhoBwKyy4LLbPjBjrgfGmIx4CaLJAwXaor82U13tcYsOgGOGKfpltwHwK740jTXKNBhtxnHgbxn9Y0Ft3RvqhHYFWtEzPQ/LJGlCuUArKE3HvZRK6ynjoppd5VvkzTI0W/eGyyid/zLkEyZry5VAgr0f3GchIfEtU65thVuopw2vY2PBtxzUAMoZFIbb9c35oi578Qit3eN4Vu88WwjJ8G+5hQRkbJSdkb8zEvTpR/XNMLihZJJ2cnuNU96vYDSn5AzTrtEIV/UHKA7H+gKZifFxkTrN0URg95luq8RitrN+fQvQcsZh5eoqAMKujYTAPv5/4hCKMWAk6m0zLODC78aTA25ISBrK1XCNCGFvNIZMQc519Jw0zW8dSz0Qj6saeNdn2F3oN+/DegGjjBu8WrfO7K4MjAiPRtgAUYD1OkjmgPpjFL53zdU1sE01l5BDgXAmMvnBxWhVnfuY/Go9Pf1OzgvZhFOh+e9Tkkkn5taHdeTaq+WGDhTrS1eBRx25chsD4uzuMpxDO3ta9jfuVR4VOEy+hz4P0dU1Q+3pnnJmjJnOH8Ptr6dSPasLDY91cZrmFPpNZ/zWD7Mg+OYJojE3VjFJ/We7FlcplSvHO7iyFfoqTqyFVBW90vdLnq+hbDcNIutB4Oeh6qMu39nHKQCQ0JfmGb7NWtND8KvtQlc2pKx3eM/QMlqbz20PnVBV2jgeP58PpntBDKylWuAwHr2DEjQT6GzX2vXTD8hFoG67cQA6FnP/RkAiQx8Fq/HkTuF2KYhmItQA+d1iCSn2hsqnZkjH0ZMiVOhx7sYVVTRkCxiG7KhJlRdoCwrLXPaXyjgtDiil2dcwLpZ6ct22mU08FlTbDpgI2di5nLeMBvMx45OgIqvcmC6LzESLS69ISHmc3vVz/G0AAArWuHv6J50gZZU9gzfF/dU53J5u/pz2UqZqyU0Ggqb9813F+WBEbmYNXNIAgUwfMdBm6IZo9OTRPR8c3obxgRXWaC/CzMeuoyf</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      欢迎参观我的博客，O(∩_∩)O但是这篇文章是私有的哦&lt;/br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.jelech.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="语录" scheme="http://www.jelech.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>更新一波新模板</title>
    <link href="http://www.jelech.cn/posts/33987/"/>
    <id>http://www.jelech.cn/posts/33987/</id>
    <published>2018-08-28T14:26:40.000Z</published>
    <updated>2018-12-01T13:37:09.287Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="m染色问题板子"><a href="#m染色问题板子" class="headerlink" title="m染色问题板子"></a>m染色问题板子</h2><blockquote><p>常规用法：求无向图种，m种颜色可以染成几种<br>可使用二分查找不同m，每次dfs(return if ans &gt; 0)来查找最小m使得图可以被染色成功。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,k,m,x,y,i,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1001</span>][<span class="number">1001</span>],f[<span class="number">1001</span>][<span class="number">1001</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">if</span>(ans &gt; <span class="number">0</span>) <span class="keyword">return</span> ; <span class="comment">// ans is bigger than 0 meaning it can be colored</span></span><br><span class="line"><span class="keyword">if</span> (dep==n+<span class="number">1</span>)&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">    rep(i,<span class="number">1</span>,m+<span class="number">1</span>) <span class="keyword">if</span> (!f[dep][i])&#123;</span><br><span class="line">            rep(j,<span class="number">1</span>,n+<span class="number">1</span>) <span class="keyword">if</span> (a[dep][j])&#123;</span><br><span class="line">                f[j][i]++;</span><br><span class="line">            &#125;</span><br><span class="line">            dfs(dep+<span class="number">1</span>);</span><br><span class="line">            rep(j,<span class="number">1</span>,n+<span class="number">1</span>) <span class="keyword">if</span> (a[dep][j])&#123;</span><br><span class="line">                f[j][i]--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">cin</span> &gt;&gt; T; T; T--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">        m = <span class="number">3</span>;<span class="comment">// m colors</span></span><br><span class="line">        rep(i,<span class="number">1</span>,k+<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">            x++,y++;</span><br><span class="line">            a[x][y]=<span class="number">1</span>;</span><br><span class="line">            a[y][x]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"N"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Y"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="nmk硬币问题"><a href="#nmk硬币问题" class="headerlink" title="nmk硬币问题"></a>nmk硬币问题</h3><blockquote><p>从n种硬币中选m个投k次，问最终向上的硬币数的期望计算</p><p>//dp 计算的是概率，代表了投第i次增加了向上硬币数可以有上次较少的成功得到，也可以由同样的数失败得到。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> d[<span class="number">200</span>][<span class="number">200</span>],p[<span class="number">200</span>],c[<span class="number">200</span>][<span class="number">200</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">        c[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)c[i][j]=c[i<span class="number">-1</span>][j<span class="number">-1</span>]+c[i<span class="number">-1</span>][j];</span><br><span class="line">    &#125;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)p[i]=p[i<span class="number">-1</span>]/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,m,t;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;t);</span><br><span class="line">        <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line">        d[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(d[i][j]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=t;k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(n-j&gt;=t)d[i+<span class="number">1</span>][j+k]+=d[i][j]*c[t][k]*p[t];</span><br><span class="line">                    <span class="keyword">else</span> d[i+<span class="number">1</span>][j-(t-(n-j))+k]+=d[i][j]*c[t][k]*p[t];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans+=d[m][i]*i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="哈密尔顿回路问题"><a href="#哈密尔顿回路问题" class="headerlink" title="哈密尔顿回路问题"></a>哈密尔顿回路问题</h3><blockquote><p>只经过所有点一次，能否走完并回到起点，以及最佳路径</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> V = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">bool</span> c[V][V];<span class="comment">//edge</span></span><br><span class="line"><span class="keyword">int</span> x[V];</span><br><span class="line"><span class="keyword">bool</span> flag[V];</span><br><span class="line"><span class="keyword">bool</span> vis[V];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hamilton</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rep(i,<span class="number">0</span>,n)&#123;</span><br><span class="line">        x[i] = <span class="number">-1</span>,vis[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>;</span><br><span class="line">    vis[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">    x[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        x[k]++;</span><br><span class="line">        <span class="keyword">while</span>(x[k] &lt; n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[x[k]] &amp;&amp; c[x[k - <span class="number">1</span>]][x[k]])</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                x[k]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((x[k] &lt; n) &amp;&amp; (k != n - <span class="number">1</span>))&#123;</span><br><span class="line">            vis[x[k]] = <span class="literal">true</span>;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((x[k] &lt; n) &amp;&amp; k == n - <span class="number">1</span> &amp;&amp; c[x[k]][x[<span class="number">0</span>]])&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            x[k] = <span class="number">-1</span>;</span><br><span class="line">            k--;</span><br><span class="line">            vis[x[k]] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)&#123;</span><br><span class="line">        <span class="comment">// init</span></span><br><span class="line">        <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">        <span class="built_in">memset</span>(flag,<span class="number">0</span>,<span class="keyword">sizeof</span>(flag));</span><br><span class="line"></span><br><span class="line">        rep(i,<span class="number">0</span>,m)&#123;</span><br><span class="line">            <span class="keyword">int</span> a,b;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">            a--,b--;</span><br><span class="line">            c[a][b]=<span class="literal">true</span>;</span><br><span class="line">            c[b][a]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        hamilton();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">bool</span> f = <span class="literal">false</span>;</span><br><span class="line">        rep(i,<span class="number">0</span>,n)&#123;</span><br><span class="line">            flag[x[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        rep(i,<span class="number">0</span>,n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!flag[i]) f=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f) <span class="built_in">cout</span> &lt;&lt;<span class="string">"no solution"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            rep(i,<span class="number">0</span>,n)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==n<span class="number">-1</span>) <span class="built_in">cout</span> &lt;&lt; x[i]+<span class="number">1</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; x[i]+<span class="number">1</span> &lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="算法" scheme="http://www.jelech.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="刷题" scheme="http://www.jelech.cn/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>中石油大学训练赛题解(Personal)</title>
    <link href="http://www.jelech.cn/posts/55713/"/>
    <id>http://www.jelech.cn/posts/55713/</id>
    <published>2018-07-22T09:55:41.000Z</published>
    <updated>2018-12-01T13:39:58.219Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="第三阶段个人训练赛（USACO2018-Open）"><a href="#第三阶段个人训练赛（USACO2018-Open）" class="headerlink" title="第三阶段个人训练赛（USACO2018 Open）"></a>第三阶段个人训练赛（USACO2018 Open）</h2><blockquote><p><a href="http://exam.upc.edu.cn/contest.php?cid=1388" target="_blank" rel="noopener">这里是源地址</a></p></blockquote><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><blockquote><p>B：给你n个数据，求其中两个数据进行AND操作(&amp;)后的最大值是什么【n&lt;=1e6 ai&lt;=2^31】</p><p>C：给你n个数，m种序列，问尽量满足前X顺序的情况下，取得的X最大时候的序列顺序是什么（两个序列进行合并操作按照字典序最小）【1≤N≤1e5 1≤M≤50,000】</p><p>E：问这种操作下回打印多少次moo</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; sorted = <span class="literal">false</span></span><br><span class="line">&gt; <span class="keyword">while</span> (<span class="keyword">not</span> sorted):</span><br><span class="line">&gt;    sorted = <span class="literal">true</span></span><br><span class="line">&gt;    moo</span><br><span class="line">&gt;    <span class="keyword">for</span> i = <span class="number">0</span> to N<span class="number">-2</span>:</span><br><span class="line">&gt;       <span class="keyword">if</span> A[i+<span class="number">1</span>] &lt; A[i]:</span><br><span class="line">&gt;          swap A[i], A[i+<span class="number">1</span>]</span><br><span class="line">&gt;    <span class="keyword">for</span> i = N<span class="number">-2</span> downto <span class="number">0</span>:</span><br><span class="line">&gt;       <span class="keyword">if</span> A[i+<span class="number">1</span>] &lt; A[i]:</span><br><span class="line">&gt;          swap A[i], A[i+<span class="number">1</span>]</span><br><span class="line">&gt;    <span class="keyword">for</span> i = <span class="number">0</span> to N<span class="number">-2</span>:</span><br><span class="line">&gt;       <span class="keyword">if</span> A[i+<span class="number">1</span>] &lt; A[i]:</span><br><span class="line">&gt;          sorted = <span class="literal">false</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>【1≤N≤100,000 0&lt;=Ai&lt;=1e9】</p></blockquote><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><blockquote><p>B:（题外话：一开始就想的字典树维护，可是他们一堆人就开始莽交，让人怀疑人生，没办法只有强行暴力过）直接暴力肯定不行，需要压缩一下复杂度。首先，两个数&amp;操作后得到的数肯定比最小的数还要小，这是一定的。所以，我们可以想到，在维护一个最大值的情况下，如果后序遍历到了比这种数要小的，就不用进行运算了。因此答案可以是直接进行排序，从大到小遍历，维护一个&amp;操作的最大值，如果取得的数比这个数小，就直接跳过后序的访问，这样减去了很多多余操作。</p><p>C:（题外话：这道题是真的没想到用拓扑排序。。）由于X是前几个，有顺序。并且前X个序列合并后都是独立判断，所以，我们可以直接二分答案，每次二分直接建图，再跑一次拓扑排序判断有没有环。因为有环的时候代表了这个合并的序列是不合法的（这个比较难想到）</p><p>E：（题外话：这不就是问冒泡排序次数吗？然后WA了）首先，这是双向冒泡（当然看得出来）然后，通过观察。我发现从每次从头往后找一个需要往后移动数，那么这次是肯定会移动的，而从后往前移动的数，可以是自己移动的，也可能是之前的数往后移动，将它顺便移动到前面的。那么我们维护一个最大值。设定一个中间变量，每次找到一个应该往后移动的数，就加一，如果找到的是向前的，并且他要去的位置是之前其他数已经移动的位置，那么久减一，这样从头到尾遍历一遍就得出了结果。（代码和解释稍微有更改）</p></blockquote><h3 id="C题源代码："><a href="#C题源代码：" class="headerlink" title="C题源代码："></a>C题源代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FI(n) FastIO::read(n)</span></span><br><span class="line"><span class="keyword">namespace</span> FastIO &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIZE = <span class="number">1</span> &lt;&lt; <span class="number">16</span>;</span><br><span class="line"><span class="keyword">char</span> buf[SIZE], obuf[SIZE], str[<span class="number">60</span>];</span><br><span class="line"><span class="keyword">int</span> bi = SIZE, bn = SIZE, opt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (bn) &#123;</span><br><span class="line"><span class="keyword">for</span> (; bi &lt; bn &amp;&amp; buf[bi] &lt;= <span class="string">' '</span>; bi++);</span><br><span class="line"><span class="keyword">if</span> (bi &lt; bn) <span class="keyword">break</span>;</span><br><span class="line">bn = fread(buf, <span class="number">1</span>, SIZE, <span class="built_in">stdin</span>);</span><br><span class="line">bi = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sn = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (bn) &#123;</span><br><span class="line"><span class="keyword">for</span> (; bi &lt; bn &amp;&amp; buf[bi] &gt; <span class="string">' '</span>; bi++) s[sn++] = buf[bi];</span><br><span class="line"><span class="keyword">if</span> (bi &lt; bn) <span class="keyword">break</span>;</span><br><span class="line">bn = fread(buf, <span class="number">1</span>, SIZE, <span class="built_in">stdin</span>);</span><br><span class="line">bi = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">s[sn] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> sn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span>&amp; x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = read(str), bf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>; <span class="keyword">if</span> (str[i] == <span class="string">'-'</span>) bf = <span class="number">-1</span>, i++; <span class="keyword">else</span> bf = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; i &lt; n; i++) x = x * <span class="number">10</span> + str[i] - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">if</span> (bf &lt; <span class="number">0</span>) x = -x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;; <span class="comment">// 快速读入挂</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">5e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,m,cnt;</span><br><span class="line"><span class="keyword">int</span> head[MAXN], to[MAXN&lt;&lt;<span class="number">1</span>], net[MAXN&lt;&lt;<span class="number">1</span>], r[MAXN], vis[MAXN];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; q[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    to[cnt]=v;</span><br><span class="line">    net[cnt] = head[u];</span><br><span class="line">    head[u] = cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp;a) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.id &lt; id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">std</span> :: priority_queue &lt;node&gt; dl;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">0</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">    <span class="built_in">memset</span>(r,<span class="number">0</span>,<span class="keyword">sizeof</span>(r));</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mid;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;q[i].size()<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            addedge(q[i][j], q[i][j+<span class="number">1</span>]);</span><br><span class="line">            r[q[i][j+<span class="number">1</span>]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">topsort</span><span class="params">(<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!r[i])&#123;</span><br><span class="line">            sum++;</span><br><span class="line">            dl.push((node)&#123;i&#125;);</span><br><span class="line">            vis[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!dl.empty())&#123;</span><br><span class="line">        node now = dl.top();</span><br><span class="line">        <span class="keyword">if</span>(f) <span class="built_in">printf</span>(<span class="string">"%d "</span>, now.id);</span><br><span class="line">        dl.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[now.id];i;i=net[i])&#123;</span><br><span class="line">            r[to[i]]--;</span><br><span class="line">            <span class="keyword">if</span>(!r[to[i]] &amp;&amp; !vis[to[i]])&#123;</span><br><span class="line">                dl.push((node)&#123;to[i]&#125;);</span><br><span class="line">                sum++;</span><br><span class="line">                vis[to[i]]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum==n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    while(~scanf("%d %d",&amp;n,&amp;m))&#123;</span></span><br><span class="line"><span class="comment">//        freopen("in.txt","r",stdin);</span></span><br><span class="line"><span class="comment">//        freopen("out.txt","w",stdout);</span></span><br><span class="line">        FI(n),FI(m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> s,x;</span><br><span class="line"><span class="comment">//            scanf("%d",&amp;s);</span></span><br><span class="line">            FI(s);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=s;j++)&#123;</span><br><span class="line"><span class="comment">//                scanf("%d",&amp;x);</span></span><br><span class="line">                FI(x);</span><br><span class="line">                q[i].push_back(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=m+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            build(mid);</span><br><span class="line">            <span class="keyword">if</span>(topsort(<span class="number">0</span>))&#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">                ans=mid;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                r=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        build(ans);</span><br><span class="line">        topsort(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E题源代码："><a href="#E题源代码：" class="headerlink" title="E题源代码："></a>E题源代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FI(n) FastIO::read(n)</span></span><br><span class="line"><span class="keyword">namespace</span> FastIO &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SIZE = <span class="number">1</span> &lt;&lt; <span class="number">16</span>;</span><br><span class="line"><span class="keyword">char</span> buf[SIZE], obuf[SIZE], str[<span class="number">60</span>];</span><br><span class="line"><span class="keyword">int</span> bi = SIZE, bn = SIZE, opt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (bn) &#123;</span><br><span class="line"><span class="keyword">for</span> (; bi &lt; bn &amp;&amp; buf[bi] &lt;= <span class="string">' '</span>; bi++);</span><br><span class="line"><span class="keyword">if</span> (bi &lt; bn) <span class="keyword">break</span>;</span><br><span class="line">bn = fread(buf, <span class="number">1</span>, SIZE, <span class="built_in">stdin</span>);</span><br><span class="line">bi = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sn = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (bn) &#123;</span><br><span class="line"><span class="keyword">for</span> (; bi &lt; bn &amp;&amp; buf[bi] &gt; <span class="string">' '</span>; bi++) s[sn++] = buf[bi];</span><br><span class="line"><span class="keyword">if</span> (bi &lt; bn) <span class="keyword">break</span>;</span><br><span class="line">bn = fread(buf, <span class="number">1</span>, SIZE, <span class="built_in">stdin</span>);</span><br><span class="line">bi = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">s[sn] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> sn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span>&amp; x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = read(str), bf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>; <span class="keyword">if</span> (str[i] == <span class="string">'-'</span>) bf = <span class="number">-1</span>, i++; <span class="keyword">else</span> bf = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; i &lt; n; i++) x = x * <span class="number">10</span> + str[i] - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">if</span> (bf &lt; <span class="number">0</span>) x = -x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;; <span class="comment">// 快速读入挂</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val,p;</span><br><span class="line">&#125;emt[<span class="number">100007</span>];</span><br><span class="line"><span class="keyword">int</span> t,n,m;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">100007</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.val==b.val) <span class="keyword">return</span> a.p&lt;b.p;</span><br><span class="line">    <span class="keyword">return</span> a.val &lt; b.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    while(~scanf("%d",&amp;n))&#123;</span></span><br><span class="line"><span class="comment">//        freopen("in.txt","r",stdin);</span></span><br><span class="line"><span class="comment">//        freopen("out.txt","w",stdout);</span></span><br><span class="line">        FI(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="comment">//            scanf("%d",&amp;emt[i].val);</span></span><br><span class="line">            <span class="keyword">int</span> a;</span><br><span class="line">            FI(a);</span><br><span class="line">            emt[i].val = a;</span><br><span class="line">            emt[i].p=i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sort(emt+<span class="number">1</span>,emt+<span class="number">1</span>+n,cmp);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(emt[i].p &gt; i)++cnt;</span><br><span class="line">            <span class="keyword">if</span>(vis[i])--cnt;</span><br><span class="line">            vis[emt[i].p] = <span class="literal">true</span>;</span><br><span class="line">            ans=max(ans,cnt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
    
      <category term="刷题" scheme="http://www.jelech.cn/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces Round 47 题解</title>
    <link href="http://www.jelech.cn/posts/40135/"/>
    <id>http://www.jelech.cn/posts/40135/</id>
    <published>2018-07-18T15:09:57.000Z</published>
    <updated>2018-12-01T13:40:35.835Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="Educational-Codeforces-Round-47-Rated-for-Div-2"><a href="#Educational-Codeforces-Round-47-Rated-for-Div-2" class="headerlink" title="Educational Codeforces Round 47 (Rated for Div. 2)"></a>Educational Codeforces Round 47 (Rated for Div. 2)</h2><blockquote><p><a href="https://codeforces.com/contest/1009/problem" target="_blank" rel="noopener">原文链接</a>ABCDEFG</p></blockquote><h3 id="A题意"><a href="#A题意" class="headerlink" title="A题意"></a>A题意</h3><blockquote><p>A题： 用钱包walt买价值emt的物品，顺序用钱，不找回，最多购买</p></blockquote><h3 id="A题解"><a href="#A题解" class="headerlink" title="A题解"></a>A题解</h3><blockquote><p>顺序扫一遍，有满足的就加，并后移。一种卡尺操作。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,m,emt[<span class="number">1007</span>],walt[<span class="number">1007</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;emt[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;walt[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,j=<span class="number">0</span>;<span class="comment">// to the walt</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(walt[j] &gt;= emt[i])&#123;</span><br><span class="line">ans++;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B题意"><a href="#B题意" class="headerlink" title="B题意"></a>B题意</h3><blockquote><p>B题：一个字符串只能交换0-1；1-2 问最小串</p></blockquote><h3 id="B题解"><a href="#B题解" class="headerlink" title="B题解"></a>B题解</h3><blockquote><p>看得出来1可以到任何位置，0和2的位置只能固定。所以，记录一下0，2的位置。<br>在输出完第一个2的前面的0之后，输出所有的1，再继续输出剩下的固定0,2位置。就是结果了。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,m,emt[<span class="number">100007</span>][<span class="number">3</span>],len=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">memset</span>(emt,<span class="number">0</span>,<span class="keyword">sizeof</span>(emt));</span><br><span class="line"><span class="built_in">string</span> s,s2;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>; <span class="comment">// 1 nums</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'1'</span>) cnt++;</span><br><span class="line"><span class="keyword">else</span> s2 += s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(s2[j]==<span class="string">'0'</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">0</span>;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(cnt--)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; &amp;s2[j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C题意"><a href="#C题意" class="headerlink" title="C题意"></a>C题意</h3><blockquote><p>C题：每次对一个序列输入x,d；每个数都+x,选择一个点j，向外扩散增加d，分别加到对应的位置上。问最大的平均数是多少？</p></blockquote><h3 id="C题解"><a href="#C题解" class="headerlink" title="C题解"></a>C题解</h3><blockquote><p>题也说的很清楚了。每次输入的值都加到一个总和里，最后在除n就行了。<br>二者，如果d大于0，则应该尽量让他递增更多，如果d小于0，则应该让j的位置尽量靠中间。公式化简一下，套进去就做出来了。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t,n,m,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x,d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;d);</span><br><span class="line"><span class="keyword">if</span>(d&gt;<span class="number">0</span>) ans += n*x + d*(n<span class="number">-1</span>)*n/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> ans += n*x + d*(n-(n+<span class="number">1</span>)/<span class="number">2</span>)*((n+<span class="number">1</span>)/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.15f\n"</span>, <span class="number">1.0</span>*ans/n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D题意"><a href="#D题意" class="headerlink" title="D题意"></a>D题意</h3><blockquote><p>D题：问能否建立一个连通图，这个连通图的所有边的两端点互质，n个点m条边</p></blockquote><h3 id="D题解"><a href="#D题解" class="headerlink" title="D题解"></a>D题解</h3><blockquote><p>连通图首先得所有点都连上边。其次，所有数都和1互质，因此，直接判断一下n和m的关系，可以a掉部分数据。<br>然后跑一边所有的N个数，对每个数判断大于i的点是否互质，是就加到边几何中，最后判断一下所加的所有边数是否大于了m条边。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">&#125;emt[<span class="number">100007</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">int</span> len = m; <span class="comment">// 需要加的边数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n &amp;&amp; len; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;= n &amp;&amp; len; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (__gcd(i,j)==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">len--;</span><br><span class="line">emt[len] = (node)&#123;i,j&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(len || n&gt;m+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> !<span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Possible\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, emt[i].x,emt[i].y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E题意"><a href="#E题意" class="headerlink" title="E题意"></a>E题意</h3><blockquote><p>E题： n千米，有n段路，共有n-1个可能可以休息的地方，则共有2^(n-1)种可能的休息方式; 计算 p⋅2^(n−1)</p></blockquote><h3 id="E题解"><a href="#E题解" class="headerlink" title="E题解"></a>E题解</h3><blockquote><p>这道题就是简单的数论问题。。。但是就是没读懂题。<br>这里的p代表的是期望，p<em>2^(n-1)也就是计算所有的可能的休息方式下的消耗之和。也就分别算出不同ai对结果的贡献就行。最终可以找到规律**a[i]出现的次数是 2^(n-i) + 2^(n-i-1) \</em> (n-i)**<br>但是我看了一下大神的代码，更简短，因此贴个大神的超短代码。5 5 </p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n,l,s,a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">l=(l*<span class="number">2</span>%p+b)%p;</span><br><span class="line">s=(s*<span class="number">2</span>%p+l+a)%p;</span><br><span class="line">b=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F题意"><a href="#F题意" class="headerlink" title="F题意"></a>F题意</h3><blockquote><p>A题： 用钱包walt买价值emt的物品，顺序用钱，不找回，最多购买</p></blockquote><h3 id="F题解"><a href="#F题解" class="headerlink" title="F题解"></a>F题解</h3><blockquote><p>F看题解说是用 DSU on tree。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="G题意"><a href="#G题意" class="headerlink" title="G题意"></a>G题意</h3><blockquote><p>A题： 用钱包walt买价值emt的物品，顺序用钱，不找回，最多购买</p></blockquote><h3 id="G题解"><a href="#G题解" class="headerlink" title="G题解"></a>G题解</h3><blockquote><p>顺序扫一遍，有满足的就加，并后移。一种卡尺操作。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="ACM竞赛" scheme="http://www.jelech.cn/categories/ACM%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="刷题" scheme="http://www.jelech.cn/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>又是期末</title>
    <link href="http://www.jelech.cn/posts/50181/"/>
    <id>http://www.jelech.cn/posts/50181/</id>
    <published>2018-07-17T14:56:50.000Z</published>
    <updated>2018-12-01T13:41:48.295Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)" />    <label for="pass">欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+oyYjMuaOYO02qg/jogLmaqi6VB1HeX7OEcg5lOvkzNxUEdX1oGOx9yZmDVa9i3kRVIDLyZg+mmS5T684xqIIvR8imhdofkv/yay7w6wwO7NkJE4AspOwbPGgACdS6bZZknr36G4lYc9P8d7ksoJwlRYJ2TbQikD+0OG7otHZCmwq0Pj2WqdDY5rrjRXNUDZv/rB7nt47EHZmbF94CloNuIJSTbuH+FLDv0O+iZsGgjqO8dmcmuexTz64X1bQC14X07p6gIDiJlM02xgUA5NkxjU0zWBv2Bmngj08E45BrsRk8HgZ0YtVnXmczJCSav84nIGNqky/JF/5f3ID7oqWfdti/WV1j+L//ks3djqNH0ORTQJ0nb6cXnULo0JWny+n4tytIVDJfjnBk/edC76x+74Bsw0HMMYwW3vOMv3nfMwEw4oOUDU1geyzOn2hn9OCDcdSS1GFElx/RUBKOvJ+xls9GBO2TQO/Kynylt+n/9HlSEJUMaCLylVyc4cUW4GigxnP5eYDeLNngRklMnBfcxO4ZG2SKccEotRS7vmoa/c2FoCzA7xHQ/cX1cc4VWBTr2LRI0JzqdV/KK2DkXZKnZPzns6WTAlVBEsoGcXsTIBK766Ijh4wqaE7FKSVVxVqUq5gTD6tfZEa45NZAE/E7b/W2zZ/p7+0tNIa5Nh9I4FxnymdmYkzzJxrYf9crx3ywQbKM3hSxxu5YdmlbxAAw5nCkYWX49FKDEierMal37emb7Fecbws2BSiYceSGD6MZ7FXC1zUQqTb2yQmYvdqlC8otTPw49Z+t1uI5P4/JZXnIxbvGLHadbo64vsd9aF9cUObPNq2UyV8tM1VEJg7fOHjYaNtbHWrKz/wE3Y8b3TEKIFTtjzCl3yZk/HwPlsWcUdRBx3DmnXqBrq+10wxHCy4/qEEE3d0V1+k/Cc5X4+KoLBNkVu8pwU918mF4eu85eF5pX1qpvC6/LMfyfJn3I6P3UFp+2otNe0mNpdDIArgUirnPfVgV</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      欢迎参观我的博客，O(∩_∩)O但是这篇文章是私有的哦&lt;/br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.jelech.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="http://www.jelech.cn/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>用Hexo + GitPage建立博客遇到的bug和解决办法</title>
    <link href="http://www.jelech.cn/posts/40608/"/>
    <id>http://www.jelech.cn/posts/40608/</id>
    <published>2018-06-17T02:45:53.000Z</published>
    <updated>2018-12-01T13:39:43.295Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><blockquote><p>Hexo可以将markdown+模板文件生成静态html页面，使用它可以快速的建立一个博客。但是这个过程中难免会遇到一些bug，这些bug时常是因为一些错误的操作，或者错误的参数导致的。这篇文章中我会逐一举出我遇到的问题，当然，也希望，如果你遇到的其他的问题，在下方评论区给我留言。</p></blockquote><h2 id="Deployer-not-fund"><a href="#Deployer-not-fund" class="headerlink" title="Deployer not fund  "></a><u>Deployer not fund</u>  <i class="fa fa-bug"><i></i></i></h2><p>这种bug出现是因为hexo找不到_config中提到的deployer。<br>就好比是向一个人指明了让他向北走，但是北方向并没有路，或者这条路被其他因素阻塞了。</p><ul><li>查看bug中提示的文件地址，会标注出出现错误的文件地址，根据这个地址找到错误的node_module，然后删除它，用<code>npm install</code>重装它</li><li>查看_config中的deploy选项，查看是否有写入的参数有错</li><li>查看node_module中的内容，看是否所有需要编译你各种文件的插件已经有了。<br>比如我的博客基础编译需要<code>hexo-renderer-sass</code> <code>hexo-renderer-pug</code></li></ul><h2 id="To-Be-Continue"><a href="#To-Be-Continue" class="headerlink" title="To Be Continue  "></a><u>To Be Continue</u>  <i class="fa fa-bug"><i></i></i></h2>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="BUG文档" scheme="http://www.jelech.cn/categories/BUG%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="刷题" scheme="http://www.jelech.cn/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>操作系统中的算法</title>
    <link href="http://www.jelech.cn/posts/27676/"/>
    <id>http://www.jelech.cn/posts/27676/</id>
    <published>2018-06-13T13:39:01.000Z</published>
    <updated>2018-12-01T13:39:05.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文章还在更新中…</p></blockquote><!-- toc --><a id="more"></a><h2 id="算法一：RR时间片轮转"><a href="#算法一：RR时间片轮转" class="headerlink" title="算法一：RR时间片轮转"></a>算法一：RR时间片轮转</h2><blockquote><p>百度百科：<br>时间片轮转调度是一种最古老，最简单，最公平且使用最广的算法。每个进程被分配一个时间段，称作它的时间片，即该进程允许运行的时间。如果在时间片结束时进程还在运行，则CPU将被剥夺并分配给另一个进程。如果进程在时间片结束前阻塞或结束，则CPU当即进行切换。调度程序所要做的就是维护一张就绪进程列表，当进程用完它的时间片后，它被移到队列的末尾。</p></blockquote><p>时间片轮转，从字面上理解就是会有个时间片定义，让每个进程都轮转，直到进程结束。<br>当新程序向OS提出要运行的时候，OS会给他分配适合的PCB头，成为进程的程序会先进入就绪队列，也就是排在队列的队尾。<br>新的一轮开始的时候，OS会给队首一个<strong>时间片长度</strong>，表示这个进程可以<strong>最多</strong>运行这么长的<strong>时间</strong>。</p><ul><li><strong>若</strong>当时间片用完，进程会进入就绪队列的队尾，如此循环，直到进程清空就绪队列。</li></ul><ul><li><strong>若</strong>进程结束，进程会进入伪退出状态，数据会写入虚拟内存(外存)。而此时会剩余一些时间片的时间，OS可以选择将它继续分配给下一个进程，减少不必要的等待。</li><li><strong>若</strong>进程应一些I/O请求等因素，OS也会中断进程，让其进入阻塞队列。只有请求结束后，才会让他重新进入就绪队列。</li></ul><h4 id="后来，又更新了一些方法对它进行改良。"><a href="#后来，又更新了一些方法对它进行改良。" class="headerlink" title="后来，又更新了一些方法对它进行改良。"></a>后来，又更新了一些方法对它进行改良。</h4><ol><li>带有优先级的时间片轮转法<br>因为在操作系统中，一些进程是比其他进程更需要提前完成的，因此在不同的进程里有不同的优先级。这里的优先级是静态的，意思是在进程进来前，OS以及对他进行了分析，得出了它相对于其他的进程的优先级高低。在新进程进入的时候，有可能是更高的优先级，让这个进程更有限的享用CPU，这里又分为了 &lt;基时钟中断：等待当前进程时间片结束&gt; &lt;立即抢占：等待当前进程出了临界区后立即中断进程&gt; 两种方式对现有的进程进行替换。</li><li>反馈调度法<br>这个算法是进程在调度时候的算法，普通的RR最初来自于页面置换算法中。反馈调度中提倡的是对进程已运行一部分和从未运行进行区分比较，也就是说，对于已经在队列中运行，较多次时间片的进程，优先级低于较少次时间片的进程。<br>因此在实现的时候，反馈调度算法使用了n个队列，而一般在设置的时候不同的队列的时间片也是不一样的。实现方面和RR类似，但是当有两个进程的时候，一个进程在这个队列运行完毕，会因为下一个进程的抢占，导致其进入了优先级更低的队列中。其他部分和RR算法类似，直到所有进程运行完毕。<br>其中，当有新的进程进入的时候，是插入到优先级最高的队列后面，按同样的方式，向下传播。</li></ol><h4 id="RR算法源代码"><a href="#RR算法源代码" class="headerlink" title="RR算法源代码"></a>RR算法源代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">OS algorithm of Time slice rotation</span></span><br><span class="line"><span class="comment">2018.5.15   jelech      start writing</span></span><br><span class="line"><span class="comment">2018.5.20   jelech      modify the algorithm</span></span><br><span class="line"><span class="comment">2018.5.31   jelech      modify the PCB</span></span><br><span class="line"><span class="comment">2018.6.5    jelech      modify the format</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    时间片的结构体定义</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PCB</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];      <span class="comment">// 进程名称</span></span><br><span class="line">    <span class="keyword">int</span> arrivelTime;    <span class="comment">// 到达时间</span></span><br><span class="line">    <span class="keyword">int</span> runTime;        <span class="comment">// 服务时间</span></span><br><span class="line">    <span class="keyword">int</span> timeLeft;       <span class="comment">// 剩余时间</span></span><br><span class="line">    <span class="keyword">char</span> *state;        <span class="comment">// 所处状态</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">next</span>;</span>   <span class="comment">// 链表队列</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    输入函数：输入PCB相关数据</span></span><br><span class="line"><span class="comment">    返回：就绪队列</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function">PCB *<span class="title">input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N, i;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">head</span>, *<span class="title">rear</span>;</span><span class="comment">// 定义队首、队尾</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">p</span>, *<span class="title">q</span>, *<span class="title">t</span>;</span><span class="comment">// p是队尾指针，q是队首指针，t是执行时间</span></span><br><span class="line">    head = rear = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入进程数目："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p = (struct PCB *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct PCB));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入第%d个进程的名字、到达时间、服务时间：\n"</span>, i+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%d%d"</span>, p-&gt;name, &amp;p-&gt;arrivelTime, &amp;p-&gt;runTime);</span><br><span class="line">        p-&gt;timeLeft = p-&gt;runTime;</span><br><span class="line">        p-&gt;state = <span class="string">"就绪"</span>;</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当输入结束时，把p的数据放到队首，以便下一步执行</span></span><br><span class="line">        <span class="comment">// 否则执行时间为空，队首变成q</span></span><br><span class="line">        <span class="keyword">if</span>(rear == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            head = p;</span><br><span class="line">            p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">            rear = p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            t = <span class="literal">NULL</span>;</span><br><span class="line">            q = head;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 若q和q的到达时间小于p的到达时间时，把执行时间给q</span></span><br><span class="line">            <span class="keyword">while</span>(q &amp;&amp; q-&gt;arrivelTime &lt; p-&gt;arrivelTime)</span><br><span class="line">            &#123;</span><br><span class="line">                t = q;</span><br><span class="line">                q = q-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 当q是队首时，则下一个队首变成p,以便每个进程都能够得到时间片</span></span><br><span class="line">            <span class="comment">// 或执行时间片到达队尾时（执行完成），返回给队首p</span></span><br><span class="line">            <span class="comment">// 否则给队首p占用执行时间，p执行完后到q</span></span><br><span class="line">            <span class="keyword">if</span>(q == head)</span><br><span class="line">            &#123;</span><br><span class="line">                p-&gt;next = head;</span><br><span class="line">                head = p;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(t == rear)</span><br><span class="line">            &#123;</span><br><span class="line">                rear-&gt;next = p;</span><br><span class="line">                p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">                rear = p;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                t-&gt;next = p;</span><br><span class="line">                p-&gt;next = q;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">   运行函数</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">(struct PCB *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">p</span>, *<span class="title">t</span>, *<span class="title">r</span>;</span></span><br><span class="line">    <span class="keyword">int</span> num,nowTime=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vec_out;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入时间片："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当队首不为空时，把p给队首</span></span><br><span class="line">    <span class="keyword">while</span>(head != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = p = head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把执行时间给队首</span></span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            t = head;</span><br><span class="line">            <span class="keyword">if</span>(cnt!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p-&gt;timeLeft = p-&gt;timeLeft - cnt;</span><br><span class="line">                nowTime += cnt;</span><br><span class="line">                cnt = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                p-&gt;timeLeft = p-&gt;timeLeft - num;</span><br><span class="line">                nowTime += num;</span><br><span class="line">            &#125;</span><br><span class="line">            p-&gt;state = <span class="string">"运行"</span>;</span><br><span class="line">            <span class="built_in">string</span> s = p-&gt;name;</span><br><span class="line">            vec_out.push_back(s);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 当p运行完，即剩余时间小于0时，仍然把它当做0处理</span></span><br><span class="line">            <span class="keyword">if</span>(p-&gt;timeLeft &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cnt = <span class="number">-1</span>*p-&gt;timeLeft;</span><br><span class="line">                p-&gt;timeLeft = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\n----------%d时刻各进程运行状态----------\n"</span>, nowTime);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"进程  到达时间 服务时间  剩余时间  当前状态\n"</span>);</span><br><span class="line">            <span class="keyword">while</span>(t != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%2s %8d %8d %8d %10s\n"</span>, t-&gt;name, t-&gt;arrivelTime, t-&gt;runTime, t-&gt;timeLeft, t-&gt;state);</span><br><span class="line">                t = t-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(p-&gt;timeLeft == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(p == head)</span><br><span class="line">                &#123;</span><br><span class="line">                    head = p-&gt;next;</span><br><span class="line">                    <span class="built_in">free</span>(p);</span><br><span class="line">                    p = head;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    r-&gt;next = p-&gt;next;</span><br><span class="line">                    p = r-&gt;next;</span><br><span class="line">                    r = p;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                r = p;</span><br><span class="line">                p-&gt;state = <span class="string">"就绪"</span>;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"执行顺序为：\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>, vec_out[<span class="number">0</span>].c_str());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; vec_out.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"--&gt;%s"</span>, vec_out[i].c_str());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    时间片轮转算法入口</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RR_MAIN</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">head</span>;</span></span><br><span class="line">    head = input();</span><br><span class="line">    run(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    主函数</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    RR_MAIN();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="算法二：银行家算法"><a href="#算法二：银行家算法" class="headerlink" title="算法二：银行家算法"></a>算法二：银行家算法</h3><blockquote><p>百度百科：银行家算法是一种最有代表性的避免死锁的算法。在避免死锁方法中允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配资源的安全性，若分配不会导致系统进入不安全状态，则分配，否则等待。为实现银行家算法，系统必须设置若干数据结构。</p></blockquote><p>银行家算法是为了解决在进程抢占临界区资源时候，OS能让所有进程顺利运行结束。算法主体思想是深搜，直到能找到可以把所有进程都运行完毕的，一个安全序列。<br>模拟一下大概的过程</p><ul><li>找到进程进一步需要的资源数，能满足小于现在所有剩余可用的资源数，的进程。这代表着这个进程可以正常运行结束。</li><li>然后模拟释放进程，将它之前占用的资源附加给剩余可用资源数。</li><li>循环下去，直到所有的进程都运行完毕。</li></ul><h4 id="银行家算法源代码"><a href="#银行家算法源代码" class="headerlink" title="银行家算法源代码"></a>银行家算法源代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">OS algorithm of The Banker's Algorithm</span></span><br><span class="line"><span class="comment">2018.6.6    jelech      start writing</span></span><br><span class="line"><span class="comment">2018.6.7jelechmodify algorithm</span></span><br><span class="line"><span class="comment">2018.6.10jelechmodify output</span></span><br><span class="line"><span class="comment">2018.6.12jelechmodify the file</span></span><br><span class="line"><span class="comment">2018.6.12jelechending the file</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    资源数定义</span></span><br><span class="line"><span class="comment">    进程数定义</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_PROCESS 10 <span class="comment">//进程数上限</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_RESOURCE_KIND 10 <span class="comment">//资源种类上限</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_RESOURCE_NUM 20<span class="comment">//每种资源可用数上限</span></span></span><br><span class="line"><span class="keyword">int</span> resource;<span class="comment">//实际资源种类数</span></span><br><span class="line"><span class="keyword">int</span> process;<span class="comment">//实际进程数</span></span><br><span class="line"><span class="keyword">int</span> safe_list[MAX_PROCESS];<span class="comment">//安全序列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    可用资源向量</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AVAILABLE</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> resource_number; <span class="comment">//资源数目</span></span><br><span class="line"><span class="keyword">int</span> work;<span class="comment">//工作向量</span></span><br><span class="line">&#125;Resource[MAX_RESOURCE_KIND], R_backup[MAX_RESOURCE_KIND];</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    进程数据向量表</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PROC</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> max[MAX_RESOURCE_KIND];<span class="comment">//最大需求矩阵</span></span><br><span class="line"><span class="keyword">int</span> allocation[MAX_RESOURCE_KIND];<span class="comment">//分配矩阵</span></span><br><span class="line"><span class="keyword">int</span> need[MAX_RESOURCE_KIND];<span class="comment">//需求矩阵</span></span><br><span class="line"><span class="keyword">bool</span> finish;<span class="comment">//满足标记</span></span><br><span class="line">&#125;Process[MAX_PROCESS], P_backup[MAX_PROCESS];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zero</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_me</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_allocation</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">backup</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">re_backup</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">allocation</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">one_allocation</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_safe</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">void</span> _isSafe();</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">banker</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    清零函数:对所有矩阵进行初始化</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zero</span><span class="params">()</span> </span>&#123;<span class="comment">//清零</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;MAX_RESOURCE_KIND; i++) &#123;</span><br><span class="line">Resource[i].resource_number = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;MAX_RESOURCE_KIND; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt; MAX_RESOURCE_KIND; j++) &#123;</span><br><span class="line">Process[i].max[j] = <span class="number">0</span>;</span><br><span class="line">Process[i].allocation[j] = <span class="number">0</span>;</span><br><span class="line">Process[i].need[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    绘制中间矩阵:绘制可用矩阵、最大资源矩阵、已用矩阵、需要资源矩阵</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_me</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------\n"</span></span><br><span class="line"><span class="string">"可用资源矩阵"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; resource; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, Resource[i].resource_number);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 格式</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n最大资源矩阵"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_RESOURCE_KIND *<span class="number">2</span><span class="number">-14</span>; i++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"已用资源矩阵"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_RESOURCE_KIND * <span class="number">2</span> <span class="number">-14</span>; i++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"需要资源矩阵"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_RESOURCE_KIND * <span class="number">2</span> - <span class="number">8</span>; i++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;process; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n  "</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;resource; j++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, Process[i].max[j]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_RESOURCE_KIND * <span class="number">2</span> - resource*<span class="number">2</span>; i++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;resource; j++)<span class="built_in">printf</span>(<span class="string">"%d "</span>, Process[i].allocation[j]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_RESOURCE_KIND * <span class="number">2</span> - resource * <span class="number">2</span>; i++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;resource; j++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, Process[i].need[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    初始化:输入进程个数、资源个数、进程最大需求，当前分配状态</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;<span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入资源数  "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">resource = n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入资源数量序列, 空格隔开  "</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;resource; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">Resource[i].resource_number = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n----------------------------------"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入进程数  "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">process = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;process; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> a, flag;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n输入进程%d对资源最大需求,空格隔开  "</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;resource; j++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">Process[i].max[j] = a;</span><br><span class="line"><span class="keyword">if</span> (a&gt;Resource[j].resource_number) flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">i--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n需求超过资源上限,驳回请求,请重新输入\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    初始化分配状态:输入进程当前资源分配状态</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_allocation</span><span class="params">()</span> </span>&#123;<span class="comment">//初始分配状态</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;process; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> a, flag;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n输入进程%d当前资源分配状态, 空格隔开  "</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;resource; j++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">Process[i].allocation[j] = a;</span><br><span class="line"><span class="keyword">if</span> (a&gt;Resource[j].resource_number || a&gt;Process[i].max[j]) flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">i--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n当前资源占用超过资源上限请重新输入\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    更新需求矩阵和资源数目向量</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;process; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;resource; j++) &#123;</span><br><span class="line">Process[i].need[j] = Process[i].max[j] - Process[i].allocation[j];</span><br><span class="line">Resource[j].resource_number -= Process[i].allocation[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    新资源状态分配:进程请求新的要求</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">allocation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">backup();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入进程号以及对应资源所分配的数目用空格隔开\n"</span>);</span><br><span class="line"><span class="keyword">int</span> pro_num;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;pro_num);</span><br><span class="line"><span class="keyword">int</span> aff[MAX_RESOURCE_KIND];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; resource; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;aff[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; resource; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (one_allocation(pro_num<span class="number">-1</span>, i, aff[i]) == <span class="literal">false</span>) &#123;<span class="comment">//调用单次分配函数尝试分配</span></span><br><span class="line">re_backup();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    附属：新资源状态分配</span></span><br><span class="line"><span class="comment">    单次分配</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">one_allocation</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c&gt;Process[a].need[b]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"要求超过所需上限，请求失败\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c&gt;Resource[b].resource_number) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"无足够资源，请求失败\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">Resource[b].resource_number -= c;</span><br><span class="line">Process[a].need[b] -= c;</span><br><span class="line">Process[a].allocation[b] += c;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    数据备份：方便在检查后安全性后更新是否合格</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">backup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; process; i++) &#123;</span><br><span class="line">P_backup[i] = Process[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; resource; i++) &#123;</span><br><span class="line">R_backup[i] = Resource[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    初始化分配状态:输入进程当前资源分配状态</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">re_backup</span><span class="params">()</span> </span>&#123;<span class="comment">//数据还原</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; process; i++) &#123;</span><br><span class="line">Process[i] = P_backup[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; resource; i++) &#123;</span><br><span class="line">Resource[i] = R_backup[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    安全性检测算法</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_safe</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; resource; i++) &#123;</span><br><span class="line">Resource[i].work = Resource[i].resource_number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; process; i++) &#123;</span><br><span class="line">Process[i].finish = <span class="literal">false</span>;</span><br><span class="line">safe_list[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">_isSafe();</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; process; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Process[i].finish == <span class="literal">false</span>) &#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="literal">true</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n系统状态安全，安全序列为  "</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; process; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,safe_list[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n系统状态不安全, 无法完成任务"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    //安全性算法的递归分支</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="keyword">void</span> _isSafe()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; process; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (Process[i].finish == <span class="literal">false</span>) <span class="comment">//该进程分配未结束</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; resource; j++)<span class="comment">//查找是否可用资源够这个进程使用</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Process[i].need[j] &gt; Resource[j].work)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="literal">true</span>)<span class="comment">//够分配</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; resource; j++)</span><br><span class="line">&#123;</span><br><span class="line">Resource[j].work += Process[i].allocation[j];</span><br><span class="line">Process[i].finish = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; process; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (safe_list[k] == <span class="number">0</span>) &#123;</span><br><span class="line">safe_list[k] = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// update();</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;resource; j++)<span class="comment">// i进程 更新所有资源</span></span><br><span class="line">&#123;</span><br><span class="line">Resource[j].resource_number += Process[i].allocation[j];</span><br><span class="line">Process[i].allocation[j] = <span class="number">0</span>;</span><br><span class="line">Process[i].need[j] = Process[i].max[j];</span><br><span class="line">&#125;</span><br><span class="line">show_me();</span><br><span class="line">_isSafe();<span class="comment">//递归处理</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    银行家算法入口</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">banker</span><span class="params">()</span> </span>&#123;</span><br><span class="line">backup();</span><br><span class="line"><span class="keyword">if</span> (allocation() == <span class="literal">false</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (is_safe()) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n分配成功！"</span></span><br><span class="line">        <span class="string">"\n----------------------------------"</span>);</span><br><span class="line">        show_me();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">re_backup();</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    主程序入口</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">zero();</span><br><span class="line">init();</span><br><span class="line">init_allocation();</span><br><span class="line">show_me();</span><br><span class="line">backup();</span><br><span class="line">is_safe();</span><br><span class="line">re_backup();</span><br><span class="line">banker();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">printf</span>(<span class="string">"\n若需继续分配"</span>))</span><br><span class="line">        banker();</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法三：LRU页面置换算法"><a href="#算法三：LRU页面置换算法" class="headerlink" title="算法三：LRU页面置换算法"></a>算法三：LRU页面置换算法</h3><blockquote><p>百度百科：它的实质是，当需要置换一页时，选择在之前一段时间里最久没有使用过的页面予以置换。这种算法就称为最久未使用算法</p></blockquote><h4 id="页面置换是什么"><a href="#页面置换是什么" class="headerlink" title="页面置换是什么"></a>页面置换是什么</h4><p>页面置换是指进程一部分在内存中，一部分在外存中，在cup需要调用外存中的一些内容时候，需要进行页面置换操作，而LRU置换算法根据的是在之前的调换序列中总结出的规律，并加以预测。<br>最近最久未使用比较的是<strong>当前页框中</strong>的所有进程，在这次调用之前最后一个第一次被用到的是谁，换句话说<strong>在一段时间内没有使用过的进程会被换走</strong>，这样的操作的优点是系统观察到最近使用到的进程很可能会再次被使用到，因此会换掉很久没有使用到的页面。</p><p>它的<strong>缺点</strong>是需要大量硬件的支持，并且很有可以在调换后刚好久使用到了这个页面，容易造成循环多次替换<br><strong>优点</strong>是简单有效，寻找的速度相对较快，节省了查找的时间。</p><h4 id="LRU源代码"><a href="#LRU源代码" class="headerlink" title="LRU源代码"></a>LRU源代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">OS algorithm of Least Recently Used</span></span><br><span class="line"><span class="comment">2018.6.13   jelech      start writing</span></span><br><span class="line"><span class="comment">2018.6.14   jelech      add the OP algorithm</span></span><br><span class="line"><span class="comment">2018.6.19   jelech      modify the algorithm</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    数据定义</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_PROC_NUM = <span class="number">25</span>;<span class="comment">//定义最大进程数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_PHYB_NUM = <span class="number">5</span>;<span class="comment">//定义最大物理块数</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PhysicalBlockList</span>// 输入的进程序列</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">int</span> runArray[MAX_PROC_NUM];</span><br><span class="line">&#125;PBL;</span><br><span class="line"><span class="keyword">int</span> phyBlockNum;<span class="comment">// 物理块数</span></span><br><span class="line"><span class="keyword">int</span> L[MAX_PHYB_NUM];<span class="comment">//物理块几何</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">intput</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    输入函数：对物理块数、进程序列、进程数的输入函数</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入物理块数："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;phyBlockNum);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入序列总数："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;PBL.num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入访问序列:"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= PBL.num; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;PBL.runArray[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    打印当前页框序列</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= phyBlockNum; ++i)<span class="comment">// 遍历当前页框中的所有进程代码</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>, L[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    最近最久未使用算法</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solvebylru</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> replacePos = <span class="number">1</span>; <span class="comment">// 替代位置</span></span><br><span class="line"><span class="keyword">int</span> zeroPos = <span class="number">1</span>;<span class="comment">//是否满了的位置</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"LRU算法序列:\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= PBL.num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;<span class="comment">// 标志为是否找到了进程的位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= phyBlockNum; ++j)<span class="comment">// 找到这个进程的位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(PBL.runArray[i] == L[j])</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">replacePos++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(flag)<span class="comment">//没有找到</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(zeroPos &lt;= phyBlockNum)<span class="comment">// 如果首次加入页框还没有满，直接加入</span></span><br><span class="line">&#123;</span><br><span class="line">L[zeroPos] = PBL.runArray[i];</span><br><span class="line">zeroPos++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;<span class="comment">//遍历所有的页框中的进程，找到也框中应该被替换掉的位置</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= phyBlockNum; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(L[j] == PBL.runArray[replacePos])</span><br><span class="line">&#123;</span><br><span class="line">L[j] = PBL.runArray[i];</span><br><span class="line">replacePos++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法四：磁盘调度算法"><a href="#算法四：磁盘调度算法" class="headerlink" title="算法四：磁盘调度算法"></a>算法四：磁盘调度算法</h3><blockquote><p>百度百科：磁盘调度在多道程序设计的计算机系统中，各个进程可能会不断提出不同的对磁盘进行读/写操作的请求。由于有时候这些进程的发送请求的速度比磁盘响应的还要快，因此我们有必要为每个磁盘设备建立一个等待队列</p></blockquote><h4 id="什么是磁盘调度"><a href="#什么是磁盘调度" class="headerlink" title="什么是磁盘调度"></a>什么是磁盘调度</h4><p>现在的机械硬盘大部分可以形容为许多片结合而成，在进程访问的时候，硬盘的磁盘指针就会寻找到指定的位置进行读取数据。我们这里简单的把它理解为一个光盘的读取，因此，每次访问的时候，会传送给它一个序列，每个值都代表着要访问的指定的位置。<br>然而，如果按照这个普通序列进行访问的话，就会造成指针反复的划过，时间大部分流失在了这里。因此构造一个良好的算法来保证他能快速的调用。</p><p><strong>电梯扫描算法(Scan)</strong>正如他的名字一样，它会像电梯一样上升和下降。在算法的第一步会将这个序列进行排序，与当前指针进行比较，选择上升还是下降，在按照这个方向，一直走到头，在反向进行访问。这就是Scan算法。</p><h4 id="Scan算法源代码"><a href="#Scan算法源代码" class="headerlink" title="Scan算法源代码"></a>Scan算法源代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">OS algorithm of Disk scheduling algorithm</span></span><br><span class="line"><span class="comment">2018.6.20   jelech      start writing</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    数据定义</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_PROC_NUM = <span class="number">50</span>;<span class="comment">// 最大进程数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mgnum;<span class="comment">//磁盘访问数</span></span><br><span class="line"><span class="keyword">int</span> PBL[MAX_PROC_NUM];<span class="comment">//磁盘访问序列:存放位置信息</span></span><br><span class="line"><span class="keyword">int</span> PBL_bk[MAX_PROC_NUM];<span class="comment">//磁盘访问序列:存放位置信息(备份)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mgpos=<span class="number">0</span>;<span class="comment">// 初始磁头位置</span></span><br><span class="line"><span class="keyword">int</span> putArray[MAX_PROC_NUM];<span class="comment">// 输出序列</span></span><br><span class="line"><span class="keyword">int</span> mvsum=<span class="number">0</span>;<span class="comment">// 总移动数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    数据输入</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入磁盘访问数:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mgnum);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入访问序列:"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;= mgnum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;PBL[i]);</span><br><span class="line">        PBL_bk[i] = PBL[i]; <span class="comment">// 输入时，进行备份</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入磁头位置:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mgpos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    数据输出</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n总寻道长度：%d\t平均寻道长度：%.2f\n寻道序列："</span>, mvsum, mvsum*<span class="number">1.0</span>/mgnum);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mgnum; ++i)    <span class="comment">// 遍历所有序列进行输出</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(i != mgnum<span class="number">-1</span> ? <span class="string">"%d "</span>:<span class="string">"%d\n"</span>, putArray[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*=================================================================</span></span><br><span class="line"><span class="comment">    主函数入口</span></span><br><span class="line"><span class="comment">=================================================================*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solvebyScan</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= mgnum; ++i)</span><br><span class="line">&#123;</span><br><span class="line">PBL[i] = PBL_bk[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(PBL+<span class="number">1</span>, PBL+<span class="number">1</span>+mgnum);</span><br><span class="line"><span class="keyword">int</span> rpl = <span class="number">1</span>, rpr = mgnum;<span class="comment">// 下一次要替换的位置：左、右</span></span><br><span class="line">  <span class="keyword">while</span>(PBL[rpl] &lt; mgpos) rpl++;</span><br><span class="line">  rpr = rpl;<span class="comment">//找到的是比初始指针大的第一个</span></span><br><span class="line">  rpl = rpr<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">  mvsum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> mlen = mgpos;</span><br><span class="line">  <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(rpr &lt;= mgnum)&#123;<span class="comment">// 默认先向上</span></span><br><span class="line">    putArray[pos] = PBL[rpr];</span><br><span class="line">    rpr++,pos++;</span><br><span class="line">  &#125;</span><br><span class="line">  mvsum += (PBL[rpr<span class="number">-1</span>] - mgpos);</span><br><span class="line">  <span class="keyword">while</span>(rpl &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    putArray[pos] = PBL[rpl];</span><br><span class="line">    rpl--,pos++;</span><br><span class="line">  &#125;</span><br><span class="line">  mvsum += (mgpos + PBL[rpl+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\nSCAN算法："</span>);</span><br><span class="line">  print();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="专用术语"><a href="#专用术语" class="headerlink" title="专用术语"></a>专用术语</h3><p>系统吞吐量(system throughput)    并行(paralled)    并发(concurrence)    同步 (Synchronization)<br>临界资源(critical resource)    临界区(critical section)    进程互斥(process mutualexclusion)    地址映射(address mapping)</p><p>碎片(fragmentation)    多程序设计(Multiprogramming)    分段(Segmentation)    批处理技术(batch processing technic)</p><p>异步(asynchronism)    模块化(modularization)    内聚性(cohesion)    耦合度(coupling)</p><p>分层结构(layered architecture)    命令接口(command  interface)    顺序文件(sequential file)    异步操作(asynchronous operation)</p><p>直接存储器存取(Direct Memory Address)    动态(Dynamic)    抖动(thrashing)    时间片(time slicing)(Quantum)</p><p>文件扩展名 (File Extension)    文件属性 (Attribute)    互斥(Mutexes)    引导程序 (Bootstrap)</p><p>位示图 (Bitmaps)    引导参数 Boot Parameter    规范模式 Canonical Mode    请调 Demand Paging</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;文章还在更新中…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- toc --&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://www.jelech.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://www.jelech.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="算法" scheme="http://www.jelech.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>最近的一篇随笔</title>
    <link href="http://www.jelech.cn/posts/43282/"/>
    <id>http://www.jelech.cn/posts/43282/</id>
    <published>2018-06-10T14:26:26.000Z</published>
    <updated>2018-12-01T13:41:54.455Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)" />    <label for="pass">欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      欢迎参观我的博客，O(∩_∩)O但是这篇文章是私有的哦&lt;/br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.jelech.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://www.jelech.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="烦恼" scheme="http://www.jelech.cn/tags/%E7%83%A6%E6%81%BC/"/>
    
  </entry>
  
  <entry>
    <title>13届黑龙江省赛总结</title>
    <link href="http://www.jelech.cn/posts/36596/"/>
    <id>http://www.jelech.cn/posts/36596/</id>
    <published>2018-05-19T14:48:07.000Z</published>
    <updated>2018-12-01T13:41:43.266Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)" />    <label for="pass">欢迎参观我的博客，这篇文章需要密码才能阅读哦 O(∩_∩)O(点我一下)</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      欢迎参观我的博客，O(∩_∩)O但是这篇文章是私有的哦&lt;/br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.jelech.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>福州大学14届省acm</title>
    <link href="http://www.jelech.cn/posts/7819/"/>
    <id>http://www.jelech.cn/posts/7819/</id>
    <published>2018-05-15T15:12:16.000Z</published>
    <updated>2018-12-01T13:40:29.504Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><blockquote><p><a href="https://vjudge.net/contest/226230" target="_blank" rel="noopener">原文链接</a></p></blockquote><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><blockquote><p>又跟着水了一波省赛题…啊！！！！！！！！！！</p><p>a.<br>c.<br>d.<br>e.<br>h.</p></blockquote><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><blockquote><p> a.<br>c.<br>d.<br>e.<br>h.</p></blockquote><h3 id="A题"><a href="#A题" class="headerlink" title="A题"></a>A题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> x,y,z;  </span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z))&#123;  </span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;  </span><br><span class="line">        sum+=x*<span class="number">3</span>+y*<span class="number">2</span>+z*<span class="number">6</span>;  </span><br><span class="line">        <span class="keyword">if</span>(sum&gt;=<span class="number">60</span>) <span class="built_in">printf</span>(<span class="string">"I passed the exam.\n%d\n"</span>,sum);  </span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Exam was too hard.\n%d\n"</span>,sum);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C题"><a href="#C题" class="headerlink" title="C题"></a>C题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;point[<span class="number">500</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> zx,zy;</span><br><span class="line">&#125;a[<span class="number">250000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node p,node q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p.zx==q.zx)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> p.zy&lt;q.zy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> p.zx&lt;q.zx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;point[i].x,&amp;point[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                a[cnt].zx=point[i].x+point[j].x;</span><br><span class="line">                a[cnt].zy=point[i].y+point[j].y;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+cnt,cmp);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;cnt;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].zx==a[i<span class="number">-1</span>].zx&amp;&amp;a[i].zy==a[i<span class="number">-1</span>].zy)</span><br><span class="line">            &#123;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                sum+=(num*(num<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">                num=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D题"><a href="#D题" class="headerlink" title="D题"></a>D题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> MAX = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> mp[MAX][MAX];</span><br><span class="line"><span class="keyword">int</span> cx[MAX], cy[MAX];</span><br><span class="line"><span class="keyword">bool</span> vis[MAX];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DATA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> atk, hp;</span><br><span class="line">&#125;me[MAX], em[MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; n; y++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[y] &amp;&amp; mp[x][y])</span><br><span class="line">        &#123;</span><br><span class="line">            vis[y] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(cy[y] == <span class="number">-1</span> || DFS(cy[y]))</span><br><span class="line">            &#123;</span><br><span class="line">                cx[x] = y;</span><br><span class="line">                cy[y] = x;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxMatch</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(cx, <span class="number">-1</span>, <span class="keyword">sizeof</span>(cx));</span><br><span class="line">    <span class="built_in">memset</span>(cy, <span class="number">-1</span>, <span class="keyword">sizeof</span>(cy));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cx[i] == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">            ans += DFS(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(mp, <span class="number">0</span>, <span class="keyword">sizeof</span>(mp));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;me[i].hp, &amp;me[i].atk);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;em[i].hp, &amp;em[i].atk);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">                <span class="keyword">if</span>(me[i].hp &gt; em[j].atk &amp;&amp; me[i].atk &gt;= em[j].hp)</span><br><span class="line">                    mp[i][j] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = MaxMatch();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, ans == n ? <span class="string">"Yes"</span> : <span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E题"><a href="#E题" class="headerlink" title="E题"></a>E题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> INF = <span class="number">0x3fffffff</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> MAX = <span class="number">805</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> fa[MAX], ans, num;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DATA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y, val;</span><br><span class="line">&#125;d[MAX * MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(DATA a, DATA b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.val &lt; b.val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UF_set</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX; i++)</span><br><span class="line">        fa[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x == fa[x] ? x : fa[x] = Find(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> r1 = Find(a);</span><br><span class="line">    <span class="keyword">int</span> r2 = Find(b);</span><br><span class="line">    <span class="keyword">if</span>(r1 != r2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num &gt;= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fa[r2] = r1;</span><br><span class="line">            num --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans = min(ans, val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        UF_set();</span><br><span class="line">        ans = INF, num = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>, tmp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;tmp);</span><br><span class="line">                <span class="keyword">if</span>(j &gt; i)</span><br><span class="line">                &#123;</span><br><span class="line">                    d[cnt].x = i;</span><br><span class="line">                    d[cnt].y = j;</span><br><span class="line">                    d[cnt ++].val = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(d, d + cnt, cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">            Union(d[i].x, d[i].y, d[i].val);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="H题"><a href="#H题" class="headerlink" title="H题"></a>H题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, cnt;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn], c[maxn], dp[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bin_search</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = cnt - <span class="number">1</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(l &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        m = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(b[m] &gt; num) r = m - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b[m] &lt; num) l = m + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> t &amp; (-t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = (ans + c[x]) % mod;</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= cnt)</span><br><span class="line">    &#123;</span><br><span class="line">        c[x] = (c[x] + val) % mod;</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cnt = <span class="number">1</span>;</span><br><span class="line">        sort(b, b+n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>])</span><br><span class="line">                b[cnt++] = b[i];</span><br><span class="line">        <span class="built_in">memset</span>(c, <span class="number">0</span>, <span class="keyword">sizeof</span>(c));</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> pos = bin_search(a[i]);</span><br><span class="line">            dp[i] = (getsum(pos) + <span class="number">1</span>) % mod;<span class="comment">//因为树状数组从1开始，所以这里的pos相当于pos-1</span></span><br><span class="line">            ans = (ans + dp[i]) % mod;</span><br><span class="line">            update(pos + <span class="number">1</span>, dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="ACM竞赛" scheme="http://www.jelech.cn/categories/ACM%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="刷题" scheme="http://www.jelech.cn/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>VMware下的ubuntu16.04虚拟环境搭建</title>
    <link href="http://www.jelech.cn/posts/61248/"/>
    <id>http://www.jelech.cn/posts/61248/</id>
    <published>2018-05-14T11:47:37.000Z</published>
    <updated>2018-12-01T13:36:43.020Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="想尝试linux环境？需要学习linux？特殊环境需要？继续看下去吧"><a href="#想尝试linux环境？需要学习linux？特殊环境需要？继续看下去吧" class="headerlink" title="想尝试linux环境？需要学习linux？特殊环境需要？继续看下去吧"></a>想尝试linux环境？需要学习linux？特殊环境需要？继续看下去吧</h2><blockquote><p>这是一个菜鸟的ubuntu16.04+vmware10+win10的配置教程（话说当初配置怎么那么久，到处都是坑…）以及一些重要配置，方便以后的各种操作。。。</p><p>注意事项写这里吧。。。QAQ</p><p>首先是安装ubuntu时候需要有空间≥20G…然后如果条件允许的话，尽量把虚拟机设置到固态硬盘里，cup选本机容量的一半，内存也是一半，毕竟…快起来真的很爽…<br>然后安装时候要牢记设置的密码..不然大部分情况你就只有重装一遍了<br>然后安装完ubuntu后，强烈建议安装vmware tool，emm…教程哪天更新一下，这个软件可以让虚拟机中的系统和本系统通信，直接拖拽文件之类的..超级方便0v0<br>最后，好好玩吧！</p></blockquote><h4 id="需要软件：附带下载链接"><a href="#需要软件：附带下载链接" class="headerlink" title="需要软件：附带下载链接"></a>需要软件：附带下载链接</h4><blockquote><p><strong><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/16.04.4/" target="_blank" rel="noopener">清华镜像地址ubuntu16.04</a></strong> 64选desktop-amd64, 32位选desktop-i386</p></blockquote><p><em>参考了网上博客的安装教程…实在太多了，我就不重新弄一遍了</em><br>(1) 双击打开VMware虚拟机，选择“创建新的虚拟机”；<br><img src="https://img-blog.csdn.net/20170416065821367?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.1"><br>(2) 选择“自定义（高级）”，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416065840133?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.2"><br>(3) 默认选项，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416065906024?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.3"><br>(4) 选择“稍后安装操作系统”，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416065926055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.4"><br>(5) 选择“Linux”，“Ubuntu 64位”，点击“下一步”；<br>PS. 如果你下载的是32位的Ubuntu，那么对应的应该选择“Linux”下的“Ubuntu”而不是图片中的选项。<br><img src="https://img-blog.csdn.net/20170416065941618?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.5"><br>(6) 根据需要更改虚拟机名称及存放位置，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070040384?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.6"><br>(7) 默认选项，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070056072?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.7"><br>(8) 根据需要设置内存大小，注意不要超过实际电脑的内存，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070110763?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.8"><br>(9) 默认选项，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070129263?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.9"><br>(10) 默认选项，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070200717?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.10"><br>(11) 默认选项，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070214014?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.11"><br>(12) 选择“创建新虚拟磁盘”，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070228702?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.12"><br>(13) 根据需要调整最大磁盘大小，选择“将虚拟磁盘存储为单个文件”，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070241842?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.13"><br>(14) 默认选项，点击“下一步”；<br><img src="https://img-blog.csdn.net/20170416070254952?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.14"><br>(15) 默认选项，点击“完成”。<br><img src="https://img-blog.csdn.net/20170416070310687?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.15"><br>(16) 到这一步可以看到在虚拟机左侧“我的计算机”一栏中看到刚刚创建的虚拟机，单击虚拟机的名字，单击“编辑虚拟机设置”；<br><img src="https://img-blog.csdn.net/20170416070327296?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.16"><br>(17) 选中“CD/DVD(SATA)”，选择“使用ISO映像文件”，点击“浏览”，找到前面下载好的虚拟机，点击“确定”。<br><img src="https://img-blog.csdn.net/20170416070347089?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.1.17"></p><p>2.2 在虚拟机上安装Ubuntu系统<br>(1) 点击“开启此虚拟机”；<br><img src="https://img-blog.csdn.net/20170416070422167?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.1"><br>(2) 左侧可以修改语言为中文。点击“Install Ubuntu”；<br><img src="https://img-blog.csdn.net/20170416070437980?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.2"><br>(3) 勾选“Download updates while installing Ubuntu”，点击“Continue”;<br><img src="https://img-blog.csdn.net/20170416070453511?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.3"><br>(4) 选择“Erase disk and install Ubuntu”，点击“Install Now”; 在弹出的窗口中选择“Continue”；<br>PS: 因为我们是新安装的系统，且在虚拟机中，所以可以选择“Erase disk and install Ubuntu”<br><img src="https://img-blog.csdn.net/20170416070511652?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.4"><br>(5) 点击地图上的中国的位置，会默认弹出上海的时区，因为中国所有地区都是使用同一个时区，所以上海的就OK了。点击“Continue”；<br><img src="https://img-blog.csdn.net/20170416070546293?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.5"><br>(6) 选择键盘布局，点击“Continue”；<br><img src="https://img-blog.csdn.net/20170416070603503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.6"><br>(7) 设置电脑名称和账号密码，点击即可开始安装系统。<br><img src="https://img-blog.csdn.net/20170416070622144?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.7"><br><img src="https://img-blog.csdn.net/20170416070650708?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.7-1"><br>(8) 安装完成后会有如下提示，根据提示重启电脑即可。<br><img src="https://img-blog.csdn.net/20170416070720802?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.8"><br>重启后：<br><img src="https://img-blog.csdn.net/20170416070738662?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY29saW5fbGlzaWNvbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2.2.8-1"></p><h3 id="第二部分-优化配置"><a href="#第二部分-优化配置" class="headerlink" title="第二部分 优化配置"></a>第二部分 优化配置</h3><blockquote><p>到了linux系统里，咱的操作基本上就全靠crtl+t出现的小黑框了= =</p></blockquote><p>1.第一个需要配置的是apt源，因为ubuntu服务器在外国，访问和下载一些软件很慢，因此要改成国内的…</p><p>打开命令行（ctrl+t）输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用于备份源</span></span><br><span class="line">sudo mv /etc/apt/sources.list /etc/apt/source.list.bak</span><br><span class="line"><span class="comment">#用于编辑源更新文件</span></span><br><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"><span class="comment">#sudo 是管理员身份运行，因此会让你输入密码,之前安装输入的密码就用到啦</span></span><br></pre></td></tr></table></figure><p>在打开的界面中输入（更新为清华大学的官方镜像….我怎么用这么多清华的东西？）（逃</p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><p>   输入命令行，对源进行更新</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>2.下载软件…Chrome是必备…一般都会自带火狐浏览器…emmm我用不习惯<br>3.命令嘛。。。超级超级超级超级多的。。我就说几个常用的好了。。<a href="http://man.linuxde.net/" target="_blank" rel="noopener"><strong>这里有全面的链接</strong></a></p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#权限不够就sudo，sudo麻烦就su，一次性管理员形式。。。。</span></span><br><span class="line"><span class="comment">#创建新文件夹</span></span><br><span class="line">mkdir xxx.text</span><br><span class="line"><span class="comment">#进入某个路径</span></span><br><span class="line">cd /path/</span><br><span class="line"><span class="comment">#返回上一路径</span></span><br><span class="line">cd..</span><br><span class="line"><span class="comment">#显示当前目录所有文件</span></span><br><span class="line">ls</span><br><span class="line"><span class="comment">#移动file1到file2(没file2就是path2路径下)</span></span><br><span class="line">mvpath1/file1 path2/file2</span><br><span class="line"><span class="comment">#请小心使用这个命令，删库跑路的事咱还是少做..</span></span><br><span class="line">rmpath/file</span><br><span class="line"><span class="comment">#移除文件夹</span></span><br><span class="line">rmdirpath/</span><br><span class="line"><span class="comment">#修改当前目录下所有文件为读写状态(数字意义百度吧...挺多的)</span></span><br><span class="line">chmod -r <span class="number">777</span></span><br></pre></td></tr></table></figure><p>当然啦，未完待续….. qaq(又开始偷懒了)(逃..</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="软件配置" scheme="http://www.jelech.cn/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="linux" scheme="http://www.jelech.cn/tags/linux/"/>
    
      <category term="软件安装" scheme="http://www.jelech.cn/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
      <category term="ubuntu" scheme="http://www.jelech.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>2018第九届山东ACM省赛</title>
    <link href="http://www.jelech.cn/posts/64946/"/>
    <id>http://www.jelech.cn/posts/64946/</id>
    <published>2018-05-13T14:59:56.000Z</published>
    <updated>2018-12-01T13:40:16.181Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><blockquote><p><a href="">好像山东省赛没原题链接了</a></p></blockquote><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><blockquote><p><strong>a题</strong>：给你两个字符串，长度相同。每个字母可以加一定长度到另一个字母（比如a到c有2个长度）只能向前加，z到b是2个单位。求字符串一到字符串二的任意序列的最短步长。（字母种类，数量相同即可）<br><strong>b题</strong>一个矩阵中每个位置有不同权值，在每列、每行都只选一个的情况下（0表示没有），保证选择个数最多的情况下（0表示没有），求所得集合中和最大时，集合中的最小值为多少<br><strong>c题</strong>….忘了…后补把<br><strong>e题</strong>首先，’good’数指，前面存在一个数比他小。求一个序列去掉一个数后，’good’数的数量最多。<br><strong>f题</strong>：给你四个区间，要求每个区间选一个数组成一个四元组（x1,x2,x3,x4x1,x2,x3,x4）,要求x1≠x2,x2≠x3,x3≠x4,x4≠x1<br><strong>g题</strong>nimm博弈，Bob在比赛前可以任意去掉n堆中的不超过d的某些堆（d&gt;n可以全部去掉)，Alice先手，求保证Bob必赢情况下有多少种去除方式。<br><strong>h题</strong>一种1<em>2的方块铺在N\</em>M的大方块里，里面有个空的1*1的格子，方块可以移动，求有多少种移动后的情况（每个块都有标号，所以同形状可以是不同情况）<br>….以及一些忘了题目的题，网上题目都找不到…官方竟然还删了…有机会继续补吧</p></blockquote><h3 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h3><blockquote><p>还是太划水了…h题被它的mod1e9吓到，以为搜索肯定会超时，一直没上手写，最后关头准备拼一波，莫名的错误，连样例都过不去。想一想，每次比赛都没法真正ac一道题，心里太惭愧了。少年不要忘记初心，继续加油啊！</p></blockquote><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><blockquote><p>各题ac代码如下：</p></blockquote><h3 id="A题"><a href="#A题" class="headerlink" title="A题"></a>A题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span> aa[<span class="number">55</span>],bb[<span class="number">55</span>];</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">55</span>],b[<span class="number">55</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">55</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,a,b))&#123;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(a);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> minn=<span class="number">99</span>,k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(vis[j])<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">int</span> as=b[j]-a[i];</span><br><span class="line">                <span class="keyword">if</span>(as&lt;<span class="number">0</span>)as+=<span class="number">26</span>;</span><br><span class="line">                <span class="keyword">if</span>(minn&gt;as)&#123;</span><br><span class="line">                    minn=as,k=j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            vis[k]=<span class="literal">true</span>;</span><br><span class="line">            ans+=minn;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B题"><a href="#B题" class="headerlink" title="B题"></a>B题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn  505</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> v,w,val;</span><br><span class="line">&#125;emt[maxn*maxn];</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="keyword">int</span> ans,base,res;</span><br><span class="line"><span class="keyword">int</span> head[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt,n;</span><br><span class="line"><span class="keyword">int</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> ansmatch[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    emt[cnt].v = v;</span><br><span class="line">    emt[cnt].w = w;</span><br><span class="line">    emt[cnt].val = head[u];</span><br><span class="line">    head[u] = cnt;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> tolow)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i; i=emt[i].val) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = emt[i].v;</span><br><span class="line">        <span class="keyword">if</span>(emt[i].w&gt;=tolow&amp;&amp;!vis[v]) &#123;</span><br><span class="line">            vis[v] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!ansmatch[v]||dfs(ansmatch[v],tolow)) &#123;</span><br><span class="line">                ansmatch[v] = u;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max_flow</span><span class="params">(<span class="keyword">int</span> tolow)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(ansmatch,<span class="number">0</span>,<span class="keyword">sizeof</span> ansmatch);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">if</span>(dfs(i,tolow))</span><br><span class="line">            cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;val);</span><br><span class="line">            addedge(i,j,val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    base = <span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line">    res = <span class="number">0</span>;</span><br><span class="line">    ans = max_flow(<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(base&gt;=<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(max_flow(res+base) == ans)</span><br><span class="line">            res += base;</span><br><span class="line">        <span class="keyword">else</span> base &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max(<span class="number">1</span>,res));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C题"><a href="#C题" class="headerlink" title="C题"></a>C题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            ans+=a[i]+a[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E题"><a href="#E题" class="headerlink" title="E题"></a>E题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000006</span>];</span><br><span class="line"><span class="keyword">int</span> val[<span class="number">1000006</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span>  <span class="title">Min</span><span class="params">(<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;=b)</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;t=read();</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        n=read();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i) &#123;</span><br><span class="line">            a[i]=read();</span><br><span class="line">            val[i+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> M1,M2;</span><br><span class="line">        M1=M2=n+<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;M1&amp;&amp;a[i]&gt;M2) &#123;</span><br><span class="line">                val[a[i]]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a[i]&gt;M1)&#123;</span><br><span class="line">                val[a[i]]++;</span><br><span class="line">                val[M1]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;M1) &#123;</span><br><span class="line">                M2=M1;</span><br><span class="line">                M1=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a[i]&lt;M2) &#123;</span><br><span class="line">                M2=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> num=n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(val[i]&lt;num) &#123;</span><br><span class="line">                ans=i;</span><br><span class="line">                num=val[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (val[i]==num) &#123;</span><br><span class="line">                ans=Min(ans,i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F题"><a href="#F题" class="headerlink" title="F题"></a>F题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> LL mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    LL l,r;</span><br><span class="line">    LL len;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">Node <span class="title">And</span><span class="params">(Node a,Node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Node tmp;</span><br><span class="line">    tmp.l=max(a.l,b.l);</span><br><span class="line">    tmp.r=min(a.r,b.r);</span><br><span class="line">    tmp.len=(tmp.r-tmp.l+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line">Node fir[<span class="number">4</span>];</span><br><span class="line">Node sec[<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        LL ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; ++i) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;fir[i].l,&amp;fir[i].r);</span><br><span class="line">            fir[i].len=(fir[i].r-fir[i].l+<span class="number">1</span>);</span><br><span class="line">            ans = (ans*fir[i].len)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; ++i) &#123;</span><br><span class="line">            sec[i]=And(fir[i],fir[(i+<span class="number">1</span>)%<span class="number">4</span>]);</span><br><span class="line">            <span class="keyword">if</span>(sec[i].len&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                LL tmp=sec[i].len;</span><br><span class="line">                tmp = tmp*fir[(i+<span class="number">2</span>)%<span class="number">4</span>].len%mod;</span><br><span class="line">                tmp = tmp*fir[(i+<span class="number">3</span>)%<span class="number">4</span>].len%mod;</span><br><span class="line"><span class="comment">//                printf("%d %d : %lld\n",i,i+1,tmp);</span></span><br><span class="line">                ans = (ans-tmp+mod)%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(sec[i].len&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;<span class="number">4</span>; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span>(sec[j].len&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                LL tmp=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(j==i+<span class="number">1</span>||(i==<span class="number">0</span>&amp;&amp;j==<span class="number">3</span>)) &#123;</span><br><span class="line">                    Node tmpseg = And(sec[i],sec[j]);</span><br><span class="line">                    <span class="keyword">if</span>(tmpseg.len&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                        tmp=tmpseg.len;</span><br><span class="line">                        <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;j==<span class="number">3</span>) &#123;</span><br><span class="line">                            tmp = (tmp*fir[(i+<span class="number">2</span>)%<span class="number">4</span>].len)%mod;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            tmp = (tmp*fir[(i+<span class="number">3</span>)%<span class="number">4</span>].len)%mod;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    tmp = sec[i].len*sec[j].len%mod;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">//                printf("%d %d %d %d:%lld\n",i+1,(i+1)%4+1,j+1,(j+1)%4+1,tmp);</span></span><br><span class="line">                ans = (ans+tmp%mod)%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Node tmpseg=And(And(fir[<span class="number">1</span>],fir[<span class="number">0</span>]),And(fir[<span class="number">2</span>],fir[<span class="number">3</span>]));</span><br><span class="line">        <span class="keyword">if</span>(tmpseg.len&gt;<span class="number">0</span>)</span><br><span class="line">            ans = (ans-tmpseg.len*<span class="number">3</span>%mod+mod)%mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="H题"><a href="#H题" class="headerlink" title="H题"></a>H题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> emt[<span class="number">17</span>][<span class="number">10007</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">17</span>][<span class="number">10007</span>];</span><br><span class="line"><span class="keyword">int</span> dir[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; que;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    vis[x][y]=<span class="number">1</span>;</span><br><span class="line">    node stnode = (node)&#123;x,y&#125;;</span><br><span class="line">    que.push(stnode);</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        node cntnode = que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">int</span> cntx = cntnode.x;</span><br><span class="line">        <span class="keyword">int</span> cnty = cntnode.y;</span><br><span class="line"><span class="comment">//        printf("cnt: %d %d\n",cntx,cnty);</span></span><br><span class="line">        <span class="keyword">if</span>(emt[cntx+<span class="number">1</span>][cnty]==<span class="number">2</span> &amp;&amp; !vis[cntx+<span class="number">2</span>][cnty])</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            printf("in 1\n");</span></span><br><span class="line">            ans++;</span><br><span class="line">            que.push((node)&#123;cntx+<span class="number">2</span>,cnty&#125;);</span><br><span class="line">            vis[cntx+<span class="number">2</span>][cnty]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(emt[cntx<span class="number">-1</span>][cnty]==<span class="number">2</span> &amp;&amp; !vis[cntx<span class="number">-2</span>][cnty])</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            printf("in 2\n");</span></span><br><span class="line">            ans++;</span><br><span class="line">            que.push((node)&#123;cntx<span class="number">-2</span>,cnty&#125;);</span><br><span class="line">            vis[cntx<span class="number">-2</span>][cnty]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(emt[cntx][cnty+<span class="number">1</span>]==<span class="number">1</span> &amp;&amp; !vis[cntx][cnty+<span class="number">2</span>])</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            printf("in 3\n");</span></span><br><span class="line">            ans++;</span><br><span class="line">            que.push((node)&#123;cntx,cnty+<span class="number">2</span>&#125;);</span><br><span class="line">            vis[cntx][cnty+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(emt[cntx][cnty<span class="number">-1</span>]==<span class="number">1</span> &amp;&amp; !vis[cntx][cnty<span class="number">-2</span>])</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            printf("in 4\n");</span></span><br><span class="line">            ans++;</span><br><span class="line">            que.push((node)&#123;cntx,cnty<span class="number">-2</span>&#125;);</span><br><span class="line">            vis[cntx][cnty<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(emt,<span class="number">0</span>,<span class="keyword">sizeof</span>(emt));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t1,t2,t3,t4;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;t1,&amp;t2,&amp;t3,&amp;t4);</span><br><span class="line">            <span class="keyword">if</span>(t1==t3)</span><br><span class="line">                emt[t1][t2] = <span class="number">1</span>,emt[t3][t4] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                emt[t1][t2] = <span class="number">2</span>,emt[t3][t4] = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        for(int i=0;i&lt;=n+1;i++,printf("\n"))</span></span><br><span class="line"><span class="comment">//            for(int j=0;j&lt;=m+1;j++)</span></span><br><span class="line"><span class="comment">//                printf("%d",emt[i][j]);</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n &amp;&amp; flag;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m &amp;&amp; flag;j++)</span><br><span class="line">                <span class="keyword">if</span>(emt[i][j]==<span class="number">0</span>) dfs(i,j),flag=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="G题"><a href="#G题" class="headerlink" title="G题"></a>G题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1003</span>][<span class="number">12</span>][<span class="number">1040</span>],a[<span class="number">1234</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> t,sum,ans,n,d;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">  <span class="keyword">while</span>(t--)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;d);</span><br><span class="line">    ans=<span class="number">0</span>;</span><br><span class="line">    sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">      sum^=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      dp[i][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=d ; j++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;=<span class="number">1204</span>; k++)</span><br><span class="line">        &#123;</span><br><span class="line">          dp[i][j][k]=dp[i<span class="number">-1</span>][j][k]+dp[i<span class="number">-1</span>][j<span class="number">-1</span>][k^a[i]];</span><br><span class="line">          <span class="keyword">if</span>(dp[i][j][k]&gt;=mod)</span><br><span class="line">          &#123;</span><br><span class="line">            dp[i][j][k]-=mod;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==n)</span><br><span class="line">        &#123;</span><br><span class="line">          ans+=dp[n][j][sum];</span><br><span class="line">          <span class="keyword">if</span>(ans&gt;=mod)</span><br><span class="line">            ans-=mod;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=(ans+dp[n][<span class="number">0</span>][sum]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="ACM竞赛" scheme="http://www.jelech.cn/categories/ACM%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="刷题" scheme="http://www.jelech.cn/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
      <category term="题解" scheme="http://www.jelech.cn/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>释放囚犯</title>
    <link href="http://www.jelech.cn/posts/30324/"/>
    <id>http://www.jelech.cn/posts/30324/</id>
    <published>2018-05-09T13:15:31.000Z</published>
    <updated>2018-12-02T01:22:39.962Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="Bribe-the-prisoners-（2009-Round-1C-C）-区间DP"><a href="#Bribe-the-prisoners-（2009-Round-1C-C）-区间DP" class="headerlink" title="Bribe the prisoners （2009 Round 1C C）(区间DP)"></a>Bribe the prisoners （2009 Round 1C C）(区间DP)</h2><blockquote><p><a href="">别找了…要科学上网的</a></p><p>Large dataset</p><p>1 ≤ <strong>P</strong> ≤ 10000<br>1 ≤ <strong>Q</strong> ≤ 100</p><p>Sample</p></blockquote><blockquote><p>Input<br>2<br>8 1<br>3<br>20 3<br>3 6 14</p></blockquote><blockquote><p>Output<br>Case #1: 7<br>Case #2: 35</p></blockquote><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><blockquote><p>连续的P个牢房（单个囚犯）中需要释放Q个囚犯，每次释放，有连接的囚犯都需要给1金币（若中间断开则两边不连接）。求释放Q个囚犯最少金币？</p></blockquote><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><blockquote><p>因为每次释放i位置的囚犯时，包括此时所需的金币数量，释放i左侧部分所需的金币总数，释放右侧部分所需的金币总数。这里给出dp[i][j]:=将A[i]号囚犯到A[j]号囚犯的连续部分里的所有囚犯都释放时（i到j中没有其他需要释放的囚犯）所需的最少金币总数。</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_Q 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_P 1e4</span></span><br><span class="line"><span class="keyword">int</span> P,Q,A[MAX_Q+<span class="number">7</span>];</span><br><span class="line"><span class="keyword">int</span> dp[MAX_Q+<span class="number">7</span>][MAX_Q+<span class="number">7</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">A[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">A[Q+<span class="number">1</span>] = P+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//init</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= Q; ++i)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][i+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> w = <span class="number">2</span>; w &lt;= Q+<span class="number">1</span>; ++w)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i + w &lt;= Q+<span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j = i+w,t=INT_MAX;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = i+<span class="number">1</span>; k &lt; j; ++k)</span><br><span class="line">&#123;</span><br><span class="line">t = min(t,dp[i][k]+dp[k][j]);</span><br><span class="line">&#125;</span><br><span class="line">dp[i][j] = t+A[j]-A[i]<span class="number">-2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[<span class="number">0</span>][Q+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;P, &amp;Q))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Q; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;A[i]);</span><br><span class="line">&#125;</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="ACM竞赛" scheme="http://www.jelech.cn/categories/ACM%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="刷题" scheme="http://www.jelech.cn/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="acm" scheme="http://www.jelech.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>如何安装opencv</title>
    <link href="http://www.jelech.cn/posts/13833/"/>
    <id>http://www.jelech.cn/posts/13833/</id>
    <published>2018-05-04T14:16:46.000Z</published>
    <updated>2018-12-01T13:36:53.591Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><a id="more"></a><h2 id="持续更新中ing…-qaq"><a href="#持续更新中ing…-qaq" class="headerlink" title="持续更新中ing… qaq"></a>持续更新中ing… qaq</h2><p>开一个坑…把曾经压榨我好几个星期的，如何配置opencv的方法和问题总结一下，特别是在linux环境下使用cmake安装。(电脑快就是好啊)。。。。(逃</p><p>表着急</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
    
    </summary>
    
      <category term="软件配置" scheme="http://www.jelech.cn/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="opencv" scheme="http://www.jelech.cn/tags/opencv/"/>
    
      <category term="软件安装" scheme="http://www.jelech.cn/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
</feed>
